{
  
    
        "post0": {
            "title": "Window functions and Pivot Tables with Pyspark",
            "content": "from pyspark.sql import SparkSession from pyspark.sql.types import StructField,StringType,IntegerType,StructType, DoubleType, FloatType from pyspark.sql.functions import * data_schema = [ StructField(&quot;_c0&quot;, IntegerType(), True) ,StructField(&quot;province&quot;, StringType(), True) ,StructField(&quot;specific&quot;, DoubleType(), True) ,StructField(&quot;general&quot;, DoubleType(), True) ,StructField(&quot;year&quot;, IntegerType(), True) ,StructField(&quot;gdp&quot;, FloatType(), True) ,StructField(&quot;fdi&quot;, FloatType(), True) ,StructField(&quot;rnr&quot;, DoubleType(), True) ,StructField(&quot;rr&quot;, FloatType(), True) ,StructField(&quot;i&quot;, FloatType(), True) ,StructField(&quot;fr&quot;, IntegerType(), True) ,StructField(&quot;reg&quot;, StringType(), True) ,StructField(&quot;it&quot;, IntegerType(), True) ] final_struc = StructType(fields=data_schema) file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).schema(final_struc).option(&quot;header&quot;, True).load(file_location) #df.printSchema() df.show() . ++--++--+-+-+--+-+++-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-+--+-+++-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661.0| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443.0| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673.0| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131.0|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847.0| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672.0| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375.0| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720.0| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669.0| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000.0| 0.0| 0.0|0.3243243| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354.0| 0.0| 0.0|0.3243243|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892.0| 0.0| 0.0|0.3243243|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290.0|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286.0| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800.0| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525.0| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368.0| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818.0| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464.0| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126.0| 0.0|0.7948718| 0.0|2823366|North China|1426600| ++--++--+-+-+--+-+++-+--+-+ only showing top 20 rows df.limit(10).toPandas() . _c0 province specific general year gdp fdi rnr rr i fr reg it . 0 0 | Anhui | 147002.0 | NaN | 1996 | 2093.300049 | 50661.0 | 0.0 | 0.0 | 0.000000 | 1128873.0 | East China | 631930 | . 1 1 | Anhui | 151981.0 | NaN | 1997 | 2347.320068 | 43443.0 | 0.0 | 0.0 | 0.000000 | 1356287.0 | East China | 657860 | . 2 2 | Anhui | 174930.0 | NaN | 1998 | 2542.959961 | 27673.0 | 0.0 | 0.0 | 0.000000 | 1518236.0 | East China | 889463 | . 3 3 | Anhui | 285324.0 | NaN | 1999 | 2712.340088 | 26131.0 | NaN | NaN | NaN | 1646891.0 | East China | 1227364 | . 4 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.090088 | 31847.0 | 0.0 | 0.0 | 0.000000 | 1601508.0 | East China | 1499110 | . 5 5 | Anhui | 250898.0 | NaN | 2001 | 3246.709961 | 33672.0 | 0.0 | 0.0 | 0.000000 | 1672445.0 | East China | 2165189 | . 6 6 | Anhui | 434149.0 | 66529.0 | 2002 | 3519.719971 | 38375.0 | 0.0 | 0.0 | 0.000000 | 1677840.0 | East China | 2404936 | . 7 7 | Anhui | 619201.0 | 52108.0 | 2003 | 3923.110107 | 36720.0 | 0.0 | 0.0 | 0.000000 | 1896479.0 | East China | 2815820 | . 8 8 | Anhui | 898441.0 | 349699.0 | 2004 | 4759.299805 | 54669.0 | 0.0 | 0.0 | 0.000000 | NaN | East China | 3422176 | . 9 9 | Anhui | 898441.0 | NaN | 2005 | 5350.169922 | 69000.0 | 0.0 | 0.0 | 0.324324 | NaN | East China | 3874846 | . df = df.withColumnRenamed(&quot;reg&quot;,&quot;region&quot;) . df.limit(10).toPandas() . _c0 province specific general year gdp fdi rnr rr i fr region it . 0 0 | Anhui | 147002.0 | NaN | 1996 | 2093.300049 | 50661.0 | 0.0 | 0.0 | 0.000000 | 1128873.0 | East China | 631930 | . 1 1 | Anhui | 151981.0 | NaN | 1997 | 2347.320068 | 43443.0 | 0.0 | 0.0 | 0.000000 | 1356287.0 | East China | 657860 | . 2 2 | Anhui | 174930.0 | NaN | 1998 | 2542.959961 | 27673.0 | 0.0 | 0.0 | 0.000000 | 1518236.0 | East China | 889463 | . 3 3 | Anhui | 285324.0 | NaN | 1999 | 2712.340088 | 26131.0 | NaN | NaN | NaN | 1646891.0 | East China | 1227364 | . 4 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.090088 | 31847.0 | 0.0 | 0.0 | 0.000000 | 1601508.0 | East China | 1499110 | . 5 5 | Anhui | 250898.0 | NaN | 2001 | 3246.709961 | 33672.0 | 0.0 | 0.0 | 0.000000 | 1672445.0 | East China | 2165189 | . 6 6 | Anhui | 434149.0 | 66529.0 | 2002 | 3519.719971 | 38375.0 | 0.0 | 0.0 | 0.000000 | 1677840.0 | East China | 2404936 | . 7 7 | Anhui | 619201.0 | 52108.0 | 2003 | 3923.110107 | 36720.0 | 0.0 | 0.0 | 0.000000 | 1896479.0 | East China | 2815820 | . 8 8 | Anhui | 898441.0 | 349699.0 | 2004 | 4759.299805 | 54669.0 | 0.0 | 0.0 | 0.000000 | NaN | East China | 3422176 | . 9 9 | Anhui | 898441.0 | NaN | 2005 | 5350.169922 | 69000.0 | 0.0 | 0.0 | 0.324324 | NaN | East China | 3874846 | . # df = df.toDF(*[&#39;year&#39;, &#39;region&#39;, &#39;province&#39;, &#39;gdp&#39;, &#39;fdi&#39;, &#39;specific&#39;, &#39;general&#39;, &#39;it&#39;, &#39;fr&#39;, &#39;rnr&#39;, &#39;rr&#39;, &#39;i&#39;, &#39;_c0&#39;, &#39;specific_classification&#39;, &#39;provinceIndex&#39;, &#39;regionIndex&#39;]) . df = df.select(&#39;year&#39;,&#39;region&#39;,&#39;province&#39;,&#39;gdp&#39;, &#39;fdi&#39;) . df.sort(&quot;gdp&quot;).show() . +-++--++-+ year| region|province| gdp| fdi| +-++--++-+ 1996|Southwest China| Tibet| 64.98| 679.0| 1997|Southwest China| Tibet| 77.24| 63.0| 1998|Southwest China| Tibet| 91.5| 481.0| 1999|Southwest China| Tibet|105.98| 196.0| 2000|Southwest China| Tibet| 117.8| 2.0| 2001|Southwest China| Tibet|139.16| 106.0| 2002|Southwest China| Tibet|162.04| 293.0| 1996|Northwest China| Qinghai|184.17| 576.0| 2003|Southwest China| Tibet|185.09| 467.0| 1997|Northwest China| Qinghai|202.79| 247.0| 1996|Northwest China| Ningxia| 202.9| 2826.0| 2004|Southwest China| Tibet|220.34| 2699.0| 1998|Northwest China| Qinghai|220.92| 1010.0| 1997|Northwest China| Ningxia|224.59| 671.0| 1999|Northwest China| Qinghai|239.38| 459.0| 1998|Northwest China| Ningxia|245.44| 1856.0| 2005|Southwest China| Tibet| 248.8| 1151.0| 2000|Northwest China| Qinghai|263.68|11020.0| 1999|Northwest China| Ningxia|264.58| 5134.0| 2006|Southwest China| Tibet|290.76| 1522.0| +-++--++-+ only showing top 20 rows from pyspark.sql import functions as F df.sort(F.desc(&quot;gdp&quot;)).show() . +-+-++--++ year| region| province| gdp| fdi| +-+-++--++ 2007|South Central China|Guangdong|31777.01|1712603.0| 2006|South Central China|Guangdong|26587.76|1451065.0| 2007| East China| Shandong|25776.91|1101159.0| 2005|South Central China|Guangdong|22557.37|1236400.0| 2006| East China| Shandong|21900.19|1000069.0| 2007| East China| Jiangsu|21742.05|1743140.0| 2004|South Central China|Guangdong|18864.62|1001158.0| 2007| East China| Zhejiang|18753.73|1036576.0| 2006| East China| Jiangsu|18598.69|1318339.0| 2005| East China| Shandong|18366.87| 897000.0| 2003|South Central China|Guangdong|15844.64| 782294.0| 2006| East China| Zhejiang|15718.47| 888935.0| 2004| East China| Shandong|15021.84| 870064.0| 2007|South Central China| Henan|15012.46| 306162.0| 2005| East China| Jiangsu| 15003.6|1213800.0| 2007| North China| Hebei|13607.32| 241621.0| 2002|South Central China|Guangdong|13502.42|1133400.0| 2005| East China| Zhejiang|13417.68| 772000.0| 2007| East China| Shanghai|12494.01| 792000.0| 2004| East China| Jiangsu|12442.87|1056365.0| +-+-++--++ only showing top 20 rows from pyspark.sql.types import IntegerType, StringType, DoubleType df = df.withColumn(&#39;gdp&#39;, F.col(&#39;gdp&#39;).cast(DoubleType())) . df = df.withColumn(&#39;province&#39;, F.col(&#39;province&#39;).cast(StringType())) . df.filter((df.gdp&gt;10000) &amp; (df.region==&#39;East China&#39;)).show() . +-+-+--+-++ year| region|province| gdp| fdi| +-+-+--+-++ 2003|East China| Jiangsu| 10606.849609375|1018960.0| 2004|East China| Jiangsu|12442.8701171875|1056365.0| 2005|East China| Jiangsu| 15003.599609375|1213800.0| 2006|East China| Jiangsu| 18598.689453125|1318339.0| 2007|East China| Jiangsu| 21742.05078125|1743140.0| 2002|East China|Shandong| 10275.5| 473404.0| 2003|East China|Shandong| 12078.150390625| 601617.0| 2004|East China|Shandong| 15021.83984375| 870064.0| 2005|East China|Shandong| 18366.869140625| 897000.0| 2006|East China|Shandong| 21900.189453125|1000069.0| 2007|East China|Shandong| 25776.91015625|1101159.0| 2006|East China|Shanghai| 10572.240234375| 710700.0| 2007|East China|Shanghai| 12494.009765625| 792000.0| 2004|East China|Zhejiang|11648.7001953125| 668128.0| 2005|East China|Zhejiang| 13417.6796875| 772000.0| 2006|East China|Zhejiang|15718.4697265625| 888935.0| 2007|East China|Zhejiang| 18753.73046875|1036576.0| +-+-+--+-++ from pyspark.sql import functions as F df.groupBy([&quot;region&quot;,&quot;province&quot;]).agg(F.sum(&quot;gdp&quot;) ,F.max(&quot;gdp&quot;)).show() . +-++++ region| province| sum(gdp)| max(gdp)| +-++++ South Central China| Hunan| 57190.69970703125| 9439.599609375| North China| Tianjin|30343.979858398438| 5252.759765625| Northwest China| Xinjiang| 21946.75994873047| 3523.159912109375| North China| Beijing|56081.439208984375| 9846.8095703125| South Central China|Guangdong| 184305.376953125| 31777.009765625| South Central China| Henan| 86507.60034179688| 15012.4599609375| East China| Jiangsu|129142.15966796875| 21742.05078125| Northwest China| Gansu| 16773.99005126953| 2703.97998046875| Southwest China| Guizhou|17064.130249023438| 2884.110107421875| Southwest China| Sichuan|64533.479736328125| 10562.3896484375| South Central China| Hainan| 8240.570068359375|1254.1700439453125| East China| Shandong| 147888.0283203125| 25776.91015625| Southwest China|Chongqing|29732.549926757812| 4676.1298828125| Northwest China| Shaanxi|31896.409790039062| 5757.2900390625| East China| Shanghai| 77189.4501953125| 12494.009765625| Southwest China| Tibet| 2045.120002746582|341.42999267578125| North China| Hebei| 83241.8994140625| 13607.3203125| Northeast China| Jilin|27298.250366210938| 4275.1201171875| East China| Zhejiang|109657.81884765625| 18753.73046875| North China| Shanxi| 33806.52990722656| 6024.4501953125| +-++++ only showing top 20 rows df.groupBy([&quot;region&quot;,&quot;province&quot;]).agg(F.sum(&quot;gdp&quot;).alias(&quot;SumGDP&quot;),F.max(&quot;gdp&quot;).alias(&quot;MaxGDP&quot;)).show() . +-++++ region| province| GDP| MaxGDP| +-++++ South Central China| Hunan| 57190.69970703125| 9439.599609375| North China| Tianjin|30343.979858398438| 5252.759765625| Northwest China| Xinjiang| 21946.75994873047| 3523.159912109375| North China| Beijing|56081.439208984375| 9846.8095703125| South Central China|Guangdong| 184305.376953125| 31777.009765625| South Central China| Henan| 86507.60034179688| 15012.4599609375| East China| Jiangsu|129142.15966796875| 21742.05078125| Northwest China| Gansu| 16773.99005126953| 2703.97998046875| Southwest China| Guizhou|17064.130249023438| 2884.110107421875| Southwest China| Sichuan|64533.479736328125| 10562.3896484375| South Central China| Hainan| 8240.570068359375|1254.1700439453125| East China| Shandong| 147888.0283203125| 25776.91015625| Southwest China|Chongqing|29732.549926757812| 4676.1298828125| Northwest China| Shaanxi|31896.409790039062| 5757.2900390625| East China| Shanghai| 77189.4501953125| 12494.009765625| Southwest China| Tibet| 2045.120002746582|341.42999267578125| North China| Hebei| 83241.8994140625| 13607.3203125| Northeast China| Jilin|27298.250366210938| 4275.1201171875| East China| Zhejiang|109657.81884765625| 18753.73046875| North China| Shanxi| 33806.52990722656| 6024.4501953125| +-++++ only showing top 20 rows df.groupBy([&quot;region&quot;,&quot;province&quot;]).agg( F.sum(&quot;gdp&quot;).alias(&quot;SumGDP&quot;), F.max(&quot;gdp&quot;).alias(&quot;MaxGDP&quot;) ).show() . +-++++ region| province| SumGDP| MaxGDP| +-++++ South Central China| Hunan| 57190.69970703125| 9439.599609375| North China| Tianjin|30343.979858398438| 5252.759765625| Northwest China| Xinjiang| 21946.75994873047| 3523.159912109375| North China| Beijing|56081.439208984375| 9846.8095703125| South Central China|Guangdong| 184305.376953125| 31777.009765625| South Central China| Henan| 86507.60034179688| 15012.4599609375| East China| Jiangsu|129142.15966796875| 21742.05078125| Northwest China| Gansu| 16773.99005126953| 2703.97998046875| Southwest China| Guizhou|17064.130249023438| 2884.110107421875| Southwest China| Sichuan|64533.479736328125| 10562.3896484375| South Central China| Hainan| 8240.570068359375|1254.1700439453125| East China| Shandong| 147888.0283203125| 25776.91015625| Southwest China|Chongqing|29732.549926757812| 4676.1298828125| Northwest China| Shaanxi|31896.409790039062| 5757.2900390625| East China| Shanghai| 77189.4501953125| 12494.009765625| Southwest China| Tibet| 2045.120002746582|341.42999267578125| North China| Hebei| 83241.8994140625| 13607.3203125| Northeast China| Jilin|27298.250366210938| 4275.1201171875| East China| Zhejiang|109657.81884765625| 18753.73046875| North China| Shanxi| 33806.52990722656| 6024.4501953125| +-++++ only showing top 20 rows df.limit(10).toPandas() . year region province gdp fdi . 0 1996 | East China | Anhui | 2093.300049 | 50661.0 | . 1 1997 | East China | Anhui | 2347.320068 | 43443.0 | . 2 1998 | East China | Anhui | 2542.959961 | 27673.0 | . 3 1999 | East China | Anhui | 2712.340088 | 26131.0 | . 4 2000 | East China | Anhui | 2902.090088 | 31847.0 | . 5 2001 | East China | Anhui | 3246.709961 | 33672.0 | . 6 2002 | East China | Anhui | 3519.719971 | 38375.0 | . 7 2003 | East China | Anhui | 3923.110107 | 36720.0 | . 8 2004 | East China | Anhui | 4759.299805 | 54669.0 | . 9 2005 | East China | Anhui | 5350.169922 | 69000.0 | . casesWithNewConfirmed = cases.withColumn(&quot;NewConfirmed&quot;, 100 + F.col(&quot;confirmed&quot;)) casesWithNewConfirmed.show() . df = df.withColumn(&quot;Exp_GDP&quot;, F.exp(&quot;gdp&quot;)) df.show() . +-+--+--+--+--+--+ year| region|province| gdp| fdi| Exp_GDP| +-+--+--+--+--+--+ 1996| East China| Anhui|2093.300048828125| 50661.0|Infinity| 1997| East China| Anhui|2347.320068359375| 43443.0|Infinity| 1998| East China| Anhui| 2542.9599609375| 27673.0|Infinity| 1999| East China| Anhui|2712.340087890625| 26131.0|Infinity| 2000| East China| Anhui|2902.090087890625| 31847.0|Infinity| 2001| East China| Anhui| 3246.7099609375| 33672.0|Infinity| 2002| East China| Anhui|3519.719970703125| 38375.0|Infinity| 2003| East China| Anhui|3923.110107421875| 36720.0|Infinity| 2004| East China| Anhui| 4759.2998046875| 54669.0|Infinity| 2005| East China| Anhui| 5350.169921875| 69000.0|Infinity| 2006| East China| Anhui| 6112.5|139354.0|Infinity| 2007| East China| Anhui| 7360.919921875|299892.0|Infinity| 1996|North China| Beijing|1789.199951171875|155290.0|Infinity| 1997|North China| Beijing|2077.090087890625|159286.0|Infinity| 1998|North China| Beijing|2377.179931640625|216800.0|Infinity| 1999|North China| Beijing|2678.820068359375|197525.0|Infinity| 2000|North China| Beijing|3161.659912109375|168368.0|Infinity| 2001|North China| Beijing| 3707.9599609375|176818.0|Infinity| 2002|North China| Beijing| 4315.0|172464.0|Infinity| 2003|North China| Beijing| 5007.2099609375|219126.0|Infinity| +-+--+--+--+--+--+ only showing top 20 rows . Note: Window functions . # Window functions from pyspark.sql.window import Window windowSpec = Window().partitionBy([&#39;province&#39;]).orderBy(F.desc(&#39;gdp&#39;)) df.withColumn(&quot;rank&quot;,F.rank().over(windowSpec)).show() . +-+-++--++--+-+ year| region| province| gdp| fdi| Exp_GDP|rank| +-+-++--++--+-+ 2007|South Central China|Guangdong| 31777.009765625|1712603.0|Infinity| 1| 2006|South Central China|Guangdong| 26587.759765625|1451065.0|Infinity| 2| 2005|South Central China|Guangdong| 22557.369140625|1236400.0|Infinity| 3| 2004|South Central China|Guangdong| 18864.619140625|1001158.0|Infinity| 4| 2003|South Central China|Guangdong| 15844.6396484375| 782294.0|Infinity| 5| 2002|South Central China|Guangdong| 13502.419921875|1133400.0|Infinity| 6| 2001|South Central China|Guangdong| 12039.25|1193203.0|Infinity| 7| 2000|South Central China|Guangdong| 10741.25|1128091.0|Infinity| 8| 1999|South Central China|Guangdong| 9250.6796875|1165750.0|Infinity| 9| 1998|South Central China|Guangdong| 8530.8798828125|1201994.0|Infinity| 10| 1997|South Central China|Guangdong| 7774.52978515625|1171083.0|Infinity| 11| 1996|South Central China|Guangdong| 6834.97021484375|1162362.0|Infinity| 12| 2007|South Central China| Hunan| 9439.599609375| 327051.0|Infinity| 1| 2006|South Central China| Hunan| 7688.669921875| 259335.0|Infinity| 2| 2005|South Central China| Hunan| 6596.10009765625| 207200.0|Infinity| 3| 2004|South Central China| Hunan| 5641.93994140625| 141800.0|Infinity| 4| 2003|South Central China| Hunan| 4659.990234375| 101835.0|Infinity| 5| 2002|South Central China| Hunan| 4151.5400390625| 90022.0|Infinity| 6| 2001|South Central China| Hunan| 3831.89990234375| 81011.0|Infinity| 7| 2000|South Central China| Hunan|3551.489990234375| 67833.0|Infinity| 8| +-+-++--++--+-+ only showing top 20 rows from pyspark.sql.window import Window windowSpec = Window().partitionBy([&#39;province&#39;]).orderBy(&#39;year&#39;) . dfWithLag = df.withColumn(&quot;lag_7&quot;,F.lag(&quot;gdp&quot;, 7).over(windowSpec)) . df.filter(df.year&gt;&#39;2000&#39;).show() . +-++++--+--+ year| region| province| gdp| fdi| Exp_GDP| +-++++--+--+ 2001| East China| Anhui| 3246.7099609375| 33672.0|Infinity| 2002| East China| Anhui| 3519.719970703125| 38375.0|Infinity| 2003| East China| Anhui| 3923.110107421875| 36720.0|Infinity| 2004| East China| Anhui| 4759.2998046875| 54669.0|Infinity| 2005| East China| Anhui| 5350.169921875| 69000.0|Infinity| 2006| East China| Anhui| 6112.5|139354.0|Infinity| 2007| East China| Anhui| 7360.919921875|299892.0|Infinity| 2001| North China| Beijing| 3707.9599609375|176818.0|Infinity| 2002| North China| Beijing| 4315.0|172464.0|Infinity| 2003| North China| Beijing| 5007.2099609375|219126.0|Infinity| 2004| North China| Beijing| 6033.2099609375|308354.0|Infinity| 2005| North China| Beijing| 6969.52001953125|352638.0|Infinity| 2006| North China| Beijing| 8117.77978515625|455191.0|Infinity| 2007| North China| Beijing| 9846.8095703125|506572.0|Infinity| 2001|Southwest China|Chongqing|1976.8599853515625| 25649.0|Infinity| 2002|Southwest China|Chongqing| 2232.860107421875| 19576.0|Infinity| 2003|Southwest China|Chongqing| 2555.719970703125| 26083.0|Infinity| 2004|Southwest China|Chongqing| 3034.580078125| 40508.0|Infinity| 2005|Southwest China|Chongqing| 3467.719970703125| 51600.0|Infinity| 2006|Southwest China|Chongqing| 3907.22998046875| 69595.0|Infinity| +-++++--+--+ only showing top 20 rows from pyspark.sql.window import Window windowSpec = Window().partitionBy([&#39;province&#39;]).orderBy(&#39;year&#39;).rowsBetween(-6,0) . dfWithRoll = df.withColumn(&quot;roll_7_confirmed&quot;,F.mean(&quot;gdp&quot;).over(windowSpec)) . dfWithRoll.filter(dfWithLag.year&gt;&#39;2001&#39;).show() . +-+-++++--++ year| region| province| gdp| fdi| Exp_GDP| roll_7_confirmed| +-+-++++--++ 2002|South Central China|Guangdong| 13502.419921875|1133400.0| Infinity| 9810.56849888393| 2003|South Central China|Guangdong| 15844.6396484375| 782294.0| Infinity|11097.664132254464| 2004|South Central China|Guangdong| 18864.619140625|1001158.0| Infinity|12681.962611607143| 2005|South Central China|Guangdong| 22557.369140625|1236400.0| Infinity|14685.746791294643| 2006|South Central China|Guangdong| 26587.759765625|1451065.0| Infinity|17162.472516741072| 2007|South Central China|Guangdong| 31777.009765625|1712603.0| Infinity| 20167.5810546875| 2002|South Central China| Hunan| 4151.5400390625| 90022.0| Infinity|3309.1999860491073| 2003|South Central China| Hunan| 4659.990234375| 101835.0| Infinity| 3612.037179129464| 2004|South Central China| Hunan| 5641.93994140625| 141800.0| Infinity|4010.9900251116073| 2005|South Central China| Hunan| 6596.10009765625| 207200.0| Infinity| 4521.07146344866| 2006|South Central China| Hunan| 7688.669921875| 259335.0| Infinity| 5160.232875279018| 2007|South Central China| Hunan| 9439.599609375| 327051.0| Infinity| 6001.391392299107| 2002| North China| Shanxi| 2324.800048828125| 21164.0| Infinity|1749.4771379743304| 2003| North China| Shanxi| 2855.22998046875| 21361.0| Infinity| 1972.779994419643| 2004| North China| Shanxi| 3571.3701171875| 62184.0| Infinity| 2272.118582589286| 2005| North China| Shanxi| 4230.52978515625| 27516.0| Infinity| 2646.325701032366| 2006| North China| Shanxi| 4878.60986328125| 47199.0| Infinity|3105.1128278459823| 2007| North China| Shanxi| 6024.4501953125| 134283.0| Infinity| 3702.074288504464| 2002| Southwest China| Tibet| 162.0399932861328| 293.0|2.360885537826244E70|108.38571493966239| 2003| Southwest China| Tibet|185.08999633789062| 467.0|2.418600091901801E80|125.54428536551339| +-+-++++--++ only showing top 20 rows from pyspark.sql.window import Window windowSpec = Window().partitionBy([&#39;province&#39;]).orderBy(&#39;year&#39;).rowsBetween(Window.unboundedPreceding,Window.currentRow) . dfWithRoll = df.withColumn(&quot;cumulative_gdp&quot;,F.sum(&quot;gdp&quot;).over(windowSpec)) . dfWithRoll.filter(dfWithLag.year&gt;&#39;1999&#39;).show() . +-+-++--++--++ year| region| province| gdp| fdi| Exp_GDP| cumulative_gdp| +-+-++--++--++ 2000|South Central China|Guangdong| 10741.25|1128091.0|Infinity| 43132.3095703125| 2001|South Central China|Guangdong| 12039.25|1193203.0|Infinity| 55171.5595703125| 2002|South Central China|Guangdong| 13502.419921875|1133400.0|Infinity| 68673.9794921875| 2003|South Central China|Guangdong| 15844.6396484375| 782294.0|Infinity| 84518.619140625| 2004|South Central China|Guangdong| 18864.619140625|1001158.0|Infinity| 103383.23828125| 2005|South Central China|Guangdong| 22557.369140625|1236400.0|Infinity| 125940.607421875| 2006|South Central China|Guangdong| 26587.759765625|1451065.0|Infinity| 152528.3671875| 2007|South Central China|Guangdong| 31777.009765625|1712603.0|Infinity| 184305.376953125| 2000|South Central China| Hunan|3551.489990234375| 67833.0|Infinity| 15180.9599609375| 2001|South Central China| Hunan| 3831.89990234375| 81011.0|Infinity| 19012.85986328125| 2002|South Central China| Hunan| 4151.5400390625| 90022.0|Infinity| 23164.39990234375| 2003|South Central China| Hunan| 4659.990234375| 101835.0|Infinity| 27824.39013671875| 2004|South Central China| Hunan| 5641.93994140625| 141800.0|Infinity| 33466.330078125| 2005|South Central China| Hunan| 6596.10009765625| 207200.0|Infinity| 40062.43017578125| 2006|South Central China| Hunan| 7688.669921875| 259335.0|Infinity| 47751.10009765625| 2007|South Central China| Hunan| 9439.599609375| 327051.0|Infinity| 57190.69970703125| 2000| North China| Shanxi|1845.719970703125| 22472.0|Infinity|7892.0098876953125| 2001| North China| Shanxi|2029.530029296875| 23393.0|Infinity| 9921.539916992188| 2002| North China| Shanxi|2324.800048828125| 21164.0|Infinity|12246.339965820312| 2003| North China| Shanxi| 2855.22998046875| 21361.0|Infinity|15101.569946289062| +-+-++--++--++ only showing top 20 rows . Note: Pivot Dataframes . pivoted_df = df.groupBy(&#39;year&#39;).pivot(&#39;province&#39;) .agg(F.sum(&#39;gdp&#39;).alias(&#39;gdp&#39;) , F.sum(&#39;fdi&#39;).alias(&#39;fdi&#39;)) pivoted_df.limit(10).toPandas() . year Anhui_gdp Anhui_fdi Beijing_gdp Beijing_fdi Chongqing_gdp Chongqing_fdi Fujian_gdp Fujian_fdi Gansu_gdp Gansu_fdi Guangdong_gdp Guangdong_fdi Guangxi_gdp Guangxi_fdi Guizhou_gdp Guizhou_fdi Hainan_gdp Hainan_fdi Hebei_gdp Hebei_fdi Heilongjiang_gdp Heilongjiang_fdi Henan_gdp Henan_fdi Hubei_gdp Hubei_fdi Hunan_gdp Hunan_fdi Jiangsu_gdp Jiangsu_fdi Jiangxi_gdp Jiangxi_fdi Jilin_gdp Jilin_fdi Liaoning_gdp Liaoning_fdi Ningxia_gdp Ningxia_fdi Qinghai_gdp Qinghai_fdi Shaanxi_gdp Shaanxi_fdi Shandong_gdp Shandong_fdi Shanghai_gdp Shanghai_fdi Shanxi_gdp Shanxi_fdi Sichuan_gdp Sichuan_fdi Tianjin_gdp Tianjin_fdi Tibet_gdp Tibet_fdi Xinjiang_gdp Xinjiang_fdi Yunnan_gdp Yunnan_fdi Zhejiang_gdp Zhejiang_fdi . 0 2003 | 3923.110107 | 36720.0 | 5007.209961 | 219126.0 | 2555.719971 | 26083.0 | 4983.669922 | 259903.0 | 1399.829956 | 2342.0 | 15844.639648 | 782294.0 | 2821.110107 | 41856.0 | 1426.339966 | 4521.0 | 713.960022 | 42125.0 | 6921.290039 | 96405.0 | 4057.399902 | 32180.0 | 6867.700195 | 53903.0 | 4757.450195 | 156886.0 | 4659.990234 | 101835.0 | 10606.849609 | 1018960.0 | 2450.479980 | 108197.0 | 2348.540039 | 24468.0 | 5458.220215 | 341168.0 | 445.359985 | 1743.0 | 390.200012 | 2522.0 | 2587.719971 | 33190.0 | 12078.150391 | 601617.0 | 6694.229980 | 546849.0 | 2855.229980 | 21361.0 | 5333.089844 | 41231.0 | 2578.030029 | 153473.0 | 185.089996 | 467.0 | 1886.349976 | 1534.0 | 2556.020020 | 8384.0 | 9705.019531 | 498055.0 | . 1 2007 | 7360.919922 | 299892.0 | 9846.809570 | 506572.0 | 4676.129883 | 108534.0 | 9248.530273 | 406058.0 | 2703.979980 | 11802.0 | 31777.009766 | 1712603.0 | 5823.410156 | 68396.0 | 2884.110107 | 12651.0 | 1254.170044 | 112001.0 | 13607.320312 | 241621.0 | 7104.000000 | 208508.0 | 15012.459961 | 306162.0 | 9333.400391 | 276622.0 | 9439.599609 | 327051.0 | 21742.050781 | 1743140.0 | 4820.529785 | 280657.0 | 4275.120117 | 76064.0 | 9304.519531 | 598554.0 | 919.109985 | 5047.0 | 797.349976 | 31000.0 | 5757.290039 | 119516.0 | 25776.910156 | 1101159.0 | 12494.009766 | 792000.0 | 6024.450195 | 134283.0 | 10562.389648 | 149322.0 | 5252.759766 | 527776.0 | 341.429993 | 2418.0 | 3523.159912 | 12484.0 | 4772.520020 | 39453.0 | 18753.730469 | 1036576.0 | . 2 2006 | 6112.500000 | 139354.0 | 8117.779785 | 455191.0 | 3907.229980 | 69595.0 | 7583.850098 | 322047.0 | 2277.350098 | 2954.0 | 26587.759766 | 1451065.0 | 4746.160156 | 44740.0 | 2338.979980 | 9384.0 | 1065.670044 | 74878.0 | 11467.599609 | 201434.0 | 6211.799805 | 170801.0 | 12362.790039 | 184526.0 | 7617.470215 | 244853.0 | 7688.669922 | 259335.0 | 18598.689453 | 1318339.0 | 4056.760010 | 242000.0 | 3620.270020 | 66100.0 | 8047.259766 | 359000.0 | 725.900024 | 3718.0 | 648.500000 | 27500.0 | 4743.609863 | 92489.0 | 21900.189453 | 1000069.0 | 10572.240234 | 710700.0 | 4878.609863 | 47199.0 | 8690.240234 | 120819.0 | 4462.740234 | 413077.0 | 290.760010 | 1522.0 | 3045.260010 | 10366.0 | 3988.139893 | 30234.0 | 15718.469727 | 888935.0 | . 3 1997 | 2347.320068 | 43443.0 | 2077.090088 | 159286.0 | 1509.750000 | 38675.0 | 2870.899902 | 419666.0 | 793.570007 | 4144.0 | 7774.529785 | 1171083.0 | 1817.250000 | 87986.0 | 805.789978 | 4977.0 | 411.160004 | 70554.0 | 3953.780029 | 110064.0 | 2667.500000 | 73485.0 | 4041.090088 | 69204.0 | 2856.469971 | 79019.0 | 2849.270020 | 91702.0 | 6004.209961 | 507208.0 | 1409.739990 | 30068.0 | 1346.790039 | 45155.0 | 3157.689941 | 167142.0 | 224.589996 | 671.0 | 202.789993 | 247.0 | 1363.599976 | 62816.0 | 6537.069824 | 249294.0 | 3438.790039 | 422536.0 | 1476.000000 | 26592.0 | 3241.469971 | 24846.0 | 1264.630005 | 251135.0 | 77.239998 | 63.0 | 1039.849976 | 2472.0 | 1676.170044 | 16566.0 | 4686.109863 | 150345.0 | . 4 2004 | 4759.299805 | 54669.0 | 6033.209961 | 308354.0 | 3034.580078 | 40508.0 | 5763.350098 | 474801.0 | 1688.489990 | 3539.0 | 18864.619141 | 1001158.0 | 3433.500000 | 29579.0 | 1677.800049 | 6533.0 | 819.659973 | 64343.0 | 8477.629883 | 162341.0 | 4750.600098 | 123639.0 | 8553.790039 | 87367.0 | 5633.240234 | 207126.0 | 5641.939941 | 141800.0 | 12442.870117 | 1056365.0 | 2807.409912 | 161202.0 | 2662.080078 | 19059.0 | 6002.540039 | 282410.0 | 537.109985 | 6689.0 | 466.100006 | 22500.0 | 3175.580078 | 52664.0 | 15021.839844 | 870064.0 | 8072.830078 | 654100.0 | 3571.370117 | 62184.0 | 6379.629883 | 70129.0 | 3110.969971 | 247243.0 | 220.339996 | 2699.0 | 2209.090088 | 4586.0 | 3081.909912 | 14200.0 | 11648.700195 | 668128.0 | . 5 1996 | 2093.300049 | 50661.0 | 1789.199951 | 155290.0 | 1315.119995 | 21878.0 | 2484.250000 | 407876.0 | 722.520020 | 9002.0 | 6834.970215 | 1162362.0 | 1697.900024 | 66618.0 | 723.179993 | 3138.0 | 389.679993 | 78960.0 | 3452.969971 | 123652.0 | 2370.500000 | 54841.0 | 3634.689941 | 52566.0 | 2499.770020 | 68878.0 | 2540.129883 | 70344.0 | 5155.250000 | 478058.0 | 1169.729980 | 28818.0 | 1137.229980 | 39876.0 | 2793.370117 | 140405.0 | 202.899994 | 2826.0 | 184.169998 | 576.0 | 1215.839966 | 33008.0 | 5883.799805 | 259041.0 | 2957.550049 | 471578.0 | 1292.109985 | 13802.0 | 2871.649902 | 22519.0 | 1121.930054 | 200587.0 | 64.980003 | 679.0 | 900.929993 | 6639.0 | 1517.689941 | 18000.0 | 4188.529785 | 152021.0 | . 6 1998 | 2542.959961 | 27673.0 | 2377.179932 | 216800.0 | 1602.380005 | 43107.0 | 3159.909912 | 421211.0 | 887.669983 | 3864.0 | 8530.879883 | 1201994.0 | 1911.300049 | 88613.0 | 858.390015 | 4535.0 | 442.130005 | 71715.0 | 4256.009766 | 142868.0 | 2774.399902 | 52639.0 | 4308.240234 | 61654.0 | 3114.020020 | 97294.0 | 3025.530029 | 81816.0 | 6680.339844 | 543511.0 | 1605.770020 | 47768.0 | 1464.339966 | 40227.0 | 3582.459961 | 220470.0 | 245.440002 | 1856.0 | 220.919998 | 1010.0 | 1458.400024 | 30010.0 | 7021.350098 | 220274.0 | 3801.090088 | 360150.0 | 1611.079956 | 24451.0 | 3474.090088 | 37248.0 | 1374.599976 | 211361.0 | 91.500000 | 481.0 | 1106.949951 | 2167.0 | 1831.329956 | 14568.0 | 5052.620117 | 131802.0 | . 7 2001 | 3246.709961 | 33672.0 | 3707.959961 | 176818.0 | 1976.859985 | 25649.0 | 4072.850098 | 391804.0 | 1125.369995 | 7439.0 | 12039.250000 | 1193203.0 | 2279.340088 | 38416.0 | 1133.270020 | 2829.0 | 579.169983 | 46691.0 | 5516.759766 | 66989.0 | 3390.100098 | 34114.0 | 5533.009766 | 45729.0 | 3880.530029 | 118860.0 | 3831.899902 | 81011.0 | 8553.690430 | 642550.0 | 2003.069946 | 22724.0 | 1951.510010 | 33701.0 | 4669.060059 | 204446.0 | 337.440002 | 1680.0 | 300.130005 | 3649.0 | 2010.619995 | 35174.0 | 9195.040039 | 352093.0 | 5210.120117 | 429159.0 | 2029.530029 | 23393.0 | 4293.490234 | 58188.0 | 1919.089966 | 213348.0 | 139.160004 | 106.0 | 1491.599976 | 2035.0 | 2138.310059 | 6457.0 | 6898.339844 | 221162.0 | . 8 2005 | 5350.169922 | 69000.0 | 6969.520020 | 352638.0 | 3467.719971 | 51600.0 | 6554.689941 | 260800.0 | 1933.979980 | 2000.0 | 22557.369141 | 1236400.0 | 3984.100098 | 37866.0 | 2005.420044 | 10768.0 | 918.750000 | 68400.0 | 10012.110352 | 191000.0 | 5513.700195 | 145000.0 | 10587.419922 | 123000.0 | 6590.189941 | 218500.0 | 6596.100098 | 207200.0 | 15003.599609 | 1213800.0 | 3456.699951 | 205238.0 | 3122.010010 | 45266.0 | 6672.000000 | 540679.0 | 612.609985 | 14100.0 | 543.320007 | 26600.0 | 3933.719971 | 62800.0 | 18366.869141 | 897000.0 | 9247.660156 | 685000.0 | 4230.529785 | 27516.0 | 7385.100098 | 88686.0 | 3905.639893 | 332885.0 | 248.800003 | 1151.0 | 2604.189941 | 4700.0 | 3462.729980 | 17352.0 | 13417.679688 | 772000.0 | . 9 2000 | 2902.090088 | 31847.0 | 3161.659912 | 168368.0 | 1791.000000 | 24436.0 | 3764.540039 | 343191.0 | 1052.880005 | 6235.0 | 10741.250000 | 1128091.0 | 2080.040039 | 52466.0 | 1029.920044 | 2501.0 | 526.820007 | 43080.0 | 5043.959961 | 67923.0 | 3151.399902 | 30086.0 | 5052.990234 | 56403.0 | 3545.389893 | 94368.0 | 3551.489990 | 67833.0 | 7697.819824 | 607756.0 | 1853.650024 | 32080.0 | 1672.959961 | 30120.0 | 4171.689941 | 106173.0 | 295.019989 | 1741.0 | 263.679993 | 11020.0 | 1804.000000 | 28842.0 | 8337.469727 | 297119.0 | 4771.169922 | 316014.0 | 1845.719971 | 22472.0 | 3928.199951 | 43694.0 | 1701.880005 | 116601.0 | 117.800003 | 2.0 | 1363.560059 | 1911.0 | 2011.189941 | 12812.0 | 6141.029785 | 161266.0 | . pivoted_df.columns . Out[55]: [&#39;year&#39;, &#39;Anhui_gdp&#39;, &#39;Anhui_fdi&#39;, &#39;Beijing_gdp&#39;, &#39;Beijing_fdi&#39;, &#39;Chongqing_gdp&#39;, &#39;Chongqing_fdi&#39;, &#39;Fujian_gdp&#39;, &#39;Fujian_fdi&#39;, &#39;Gansu_gdp&#39;, &#39;Gansu_fdi&#39;, &#39;Guangdong_gdp&#39;, &#39;Guangdong_fdi&#39;, &#39;Guangxi_gdp&#39;, &#39;Guangxi_fdi&#39;, &#39;Guizhou_gdp&#39;, &#39;Guizhou_fdi&#39;, &#39;Hainan_gdp&#39;, &#39;Hainan_fdi&#39;, &#39;Hebei_gdp&#39;, &#39;Hebei_fdi&#39;, &#39;Heilongjiang_gdp&#39;, &#39;Heilongjiang_fdi&#39;, &#39;Henan_gdp&#39;, &#39;Henan_fdi&#39;, &#39;Hubei_gdp&#39;, &#39;Hubei_fdi&#39;, &#39;Hunan_gdp&#39;, &#39;Hunan_fdi&#39;, &#39;Jiangsu_gdp&#39;, &#39;Jiangsu_fdi&#39;, &#39;Jiangxi_gdp&#39;, &#39;Jiangxi_fdi&#39;, &#39;Jilin_gdp&#39;, &#39;Jilin_fdi&#39;, &#39;Liaoning_gdp&#39;, &#39;Liaoning_fdi&#39;, &#39;Ningxia_gdp&#39;, &#39;Ningxia_fdi&#39;, &#39;Qinghai_gdp&#39;, &#39;Qinghai_fdi&#39;, &#39;Shaanxi_gdp&#39;, &#39;Shaanxi_fdi&#39;, &#39;Shandong_gdp&#39;, &#39;Shandong_fdi&#39;, &#39;Shanghai_gdp&#39;, &#39;Shanghai_fdi&#39;, &#39;Shanxi_gdp&#39;, &#39;Shanxi_fdi&#39;, &#39;Sichuan_gdp&#39;, &#39;Sichuan_fdi&#39;, &#39;Tianjin_gdp&#39;, &#39;Tianjin_fdi&#39;, &#39;Tibet_gdp&#39;, &#39;Tibet_fdi&#39;, &#39;Xinjiang_gdp&#39;, &#39;Xinjiang_fdi&#39;, &#39;Yunnan_gdp&#39;, &#39;Yunnan_fdi&#39;, &#39;Zhejiang_gdp&#39;, &#39;Zhejiang_fdi&#39;] newColnames = [x.replace(&quot;-&quot;,&quot;_&quot;) for x in pivoted_df.columns] . pivoted_df = pivoted_df.toDF(*newColnames) . expression = &quot;&quot; cnt=0 for column in pivoted_df.columns: if column!=&#39;year&#39;: cnt +=1 expression += f&quot;&#39;{column}&#39; , {column},&quot; expression = f&quot;stack({cnt}, {expression[:-1]}) as (Type,Value)&quot; . unpivoted_df = pivoted_df.select(&#39;year&#39;,F.expr(expression)) unpivoted_df.show() . +-+-++ year| Type| Value| +-+-++ 2003| Anhui_gdp| 3923.110107421875| 2003| Anhui_fdi| 36720.0| 2003| Beijing_gdp| 5007.2099609375| 2003| Beijing_fdi| 219126.0| 2003|Chongqing_gdp| 2555.719970703125| 2003|Chongqing_fdi| 26083.0| 2003| Fujian_gdp| 4983.669921875| 2003| Fujian_fdi| 259903.0| 2003| Gansu_gdp|1399.8299560546875| 2003| Gansu_fdi| 2342.0| 2003|Guangdong_gdp| 15844.6396484375| 2003|Guangdong_fdi| 782294.0| 2003| Guangxi_gdp| 2821.110107421875| 2003| Guangxi_fdi| 41856.0| 2003| Guizhou_gdp|1426.3399658203125| 2003| Guizhou_fdi| 4521.0| 2003| Hainan_gdp| 713.9600219726562| 2003| Hainan_fdi| 42125.0| 2003| Hebei_gdp| 6921.2900390625| 2003| Hebei_fdi| 96405.0| +-+-++ only showing top 20 rows",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/22/Window-functions-and-Pivot-Tables-with-Pyspark.html",
            "relUrl": "/2020/08/22/Window-functions-and-Pivot-Tables-with-Pyspark.html",
            "date": " • Aug 22, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Linear Regression and Random Forest/GBT Classification with Pyspark",
            "content": "from pyspark.sql import SparkSession from pyspark.sql.types import StructField,StringType,IntegerType,StructType, DoubleType, FloatType from pyspark.sql.functions import * data_schema = [ StructField(&quot;_c0&quot;, IntegerType(), True) ,StructField(&quot;province&quot;, StringType(), True) ,StructField(&quot;specific&quot;, DoubleType(), True) ,StructField(&quot;general&quot;, DoubleType(), True) ,StructField(&quot;year&quot;, IntegerType(), True) ,StructField(&quot;gdp&quot;, FloatType(), True) ,StructField(&quot;fdi&quot;, FloatType(), True) ,StructField(&quot;rnr&quot;, DoubleType(), True) ,StructField(&quot;rr&quot;, FloatType(), True) ,StructField(&quot;i&quot;, FloatType(), True) ,StructField(&quot;fr&quot;, IntegerType(), True) ,StructField(&quot;reg&quot;, StringType(), True) ,StructField(&quot;it&quot;, IntegerType(), True) ] final_struc = StructType(fields=data_schema) file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).schema(final_struc).option(&quot;header&quot;, True).load(file_location) #df.printSchema() df.show() . ++--++--+-+-+--+-+++-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-+--+-+++-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661.0| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443.0| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673.0| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131.0|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847.0| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672.0| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375.0| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720.0| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669.0| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000.0| 0.0| 0.0|0.3243243| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354.0| 0.0| 0.0|0.3243243|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892.0| 0.0| 0.0|0.3243243|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290.0|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286.0| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800.0| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525.0| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368.0| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818.0| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464.0| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126.0| 0.0|0.7948718| 0.0|2823366|North China|1426600| ++--++--+-+-+--+-+++-+--+-+ only showing top 20 rows df.groupBy(&#39;province&#39;).count().show() . ++--+ province|count| ++--+ Guangdong| 12| Hunan| 12| Shanxi| 12| Tibet| 12| Hubei| 12| Tianjin| 12| Beijing| 12| Heilongjiang| 12| Liaoning| 12| Henan| 12| Anhui| 12| Xinjiang| 12| Fujian| 12| Jiangxi| 12| Jilin| 12| Chongqing| 12| Shaanxi| 12| Sichuan| 12| Yunnan| 12| Gansu| 12| ++--+ only showing top 20 rows mean_val = df.select(mean(df[&#39;general&#39;])).collect() mean_val[0][0] mean_gen = mean_val[0][0] df = df.na.fill(mean_gen,[&quot;general&quot;]) . mean_val = df.select(mean(df[&#39;specific&#39;])).collect() mean_val[0][0] mean_gen = mean_val[0][0] df = df.na.fill(mean_gen,[&quot;specific&quot;]) . mean_val = df.select(mean(df[&#39;rr&#39;])).collect() mean_val[0][0] mean_gen = mean_val[0][0] df = df.na.fill(mean_gen,[&quot;rr&quot;]) . mean_val = df.select(mean(df[&#39;fr&#39;])).collect() mean_val[0][0] mean_gen = mean_val[0][0] df = df.na.fill(mean_gen,[&quot;fr&quot;]) . mean_val = df.select(mean(df[&#39;rnr&#39;])).collect() mean_val[0][0] mean_gen = mean_val[0][0] df = df.na.fill(mean_gen,[&quot;rnr&quot;]) . mean_val = df.select(mean(df[&#39;i&#39;])).collect() mean_val[0][0] mean_gen = mean_val[0][0] df = df.na.fill(mean_gen,[&quot;i&quot;]) . from pyspark.sql.functions import * df = df.withColumn(&#39;specific_classification&#39;,when(df.specific &gt;= 583470.7303370787,1).otherwise(0)) . from pyspark.ml.feature import StringIndexer . indexer = StringIndexer(inputCol=&quot;province&quot;, outputCol=&quot;provinceIndex&quot;) df = indexer.fit(df).transform(df) . indexer = StringIndexer(inputCol=&quot;reg&quot;, outputCol=&quot;regionIndex&quot;) df = indexer.fit(df).transform(df) . df.show() . ++--+++-+-+--++-+-+-+--+-+--+-+--+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it|specific_classification|provinceIndex|regionIndex| ++--+++-+-+--++-+-+-+--+-+--+-+--+ 0| Anhui| 147002.0|309127.53846153844|1996| 2093.3| 50661.0| 0.0| 0.0| 0.0|1128873| East China| 631930| 0| 0.0| 0.0| 1| Anhui| 151981.0|309127.53846153844|1997|2347.32| 43443.0| 0.0| 0.0| 0.0|1356287| East China| 657860| 0| 0.0| 0.0| 2| Anhui| 174930.0|309127.53846153844|1998|2542.96| 27673.0| 0.0| 0.0| 0.0|1518236| East China| 889463| 0| 0.0| 0.0| 3| Anhui| 285324.0|309127.53846153844|1999|2712.34| 26131.0|0.0355944252244898|0.05968862|0.08376352|1646891| East China|1227364| 0| 0.0| 0.0| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847.0| 0.0| 0.0| 0.0|1601508| East China|1499110| 0| 0.0| 0.0| 5| Anhui| 250898.0|309127.53846153844|2001|3246.71| 33672.0| 0.0| 0.0| 0.0|1672445| East China|2165189| 0| 0.0| 0.0| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375.0| 0.0| 0.0| 0.0|1677840| East China|2404936| 0| 0.0| 0.0| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720.0| 0.0| 0.0| 0.0|1896479| East China|2815820| 1| 0.0| 0.0| 8| Anhui| 898441.0| 349699.0|2004| 4759.3| 54669.0| 0.0| 0.0| 0.0|2522449| East China|3422176| 1| 0.0| 0.0| 9| Anhui| 898441.0|309127.53846153844|2005|5350.17| 69000.0| 0.0| 0.0| 0.3243243|2522449| East China|3874846| 1| 0.0| 0.0| 10| Anhui|1457872.0| 279052.0|2006| 6112.5|139354.0| 0.0| 0.0| 0.3243243|3434548| East China|5167300| 1| 0.0| 0.0| 11| Anhui|2213991.0| 178705.0|2007|7360.92|299892.0| 0.0| 0.0| 0.3243243|4468640| East China|7040099| 1| 0.0| 0.0| 12| Beijing| 165957.0|309127.53846153844|1996| 1789.2|155290.0|0.0355944252244898|0.05968862|0.08376352| 634562|North China| 508135| 0| 1.0| 4.0| 13| Beijing| 165957.0|309127.53846153844|1997|2077.09|159286.0| 0.0| 0.0| 0.6| 634562|North China| 569283| 0| 1.0| 4.0| 14| Beijing| 245198.0|309127.53846153844|1998|2377.18|216800.0| 0.0| 0.0| 0.53| 938788|North China| 695528| 0| 1.0| 4.0| 15| Beijing| 388083.0|309127.53846153844|1999|2678.82|197525.0| 0.0| 0.0| 0.53|2522449|North China| 944047| 0| 1.0| 4.0| 16| Beijing| 281769.0| 188633.0|2000|3161.66|168368.0| 0.0| 0.0| 0.53|1667114|North China| 757990| 0| 1.0| 4.0| 17| Beijing| 441923.0|309127.53846153844|2001|3707.96|176818.0| 0.0| 0.0| 0.53|2093925|North China|1194728| 0| 1.0| 4.0| 18| Beijing| 558569.0| 280277.0|2002| 4315.0|172464.0| 0.0| 0.0| 0.53|2511249|North China|1078754| 0| 1.0| 4.0| 19| Beijing| 642581.0| 269596.0|2003|5007.21|219126.0| 0.0| 0.7948718| 0.0|2823366|North China|1426600| 1| 1.0| 4.0| ++--+++-+-+--++-+-+-+--+-+--+-+--+ only showing top 20 rows from pyspark.ml.linalg import Vectors from pyspark.ml.feature import VectorAssembler . df.columns . Out[375]: [&#39;_c0&#39;, &#39;province&#39;, &#39;specific&#39;, &#39;general&#39;, &#39;year&#39;, &#39;gdp&#39;, &#39;fdi&#39;, &#39;rnr&#39;, &#39;rr&#39;, &#39;i&#39;, &#39;fr&#39;, &#39;reg&#39;, &#39;it&#39;, &#39;specific_classification&#39;, &#39;provinceIndex&#39;, &#39;regionIndex&#39;] assembler = VectorAssembler( inputCols=[ &#39;provinceIndex&#39;, # &#39;specific&#39;, &#39;general&#39;, &#39;year&#39;, &#39;gdp&#39;, &#39;fdi&#39;, #&#39;rnr&#39;, #&#39;rr&#39;, #&#39;i&#39;, #&#39;fr&#39;, &#39;regionIndex&#39;, &#39;it&#39; ], outputCol=&quot;features&quot;) . output = assembler.transform(df) . final_data = output.select(&quot;features&quot;, &quot;specific&quot;) . train_data,test_data = final_data.randomSplit([0.7,0.3]) . from pyspark.ml.regression import LinearRegression lr = LinearRegression(labelCol=&#39;specific&#39;) . lrModel = lr.fit(train_data) . print(&quot;Coefficients: {} Intercept: {}&quot;.format(lrModel.coefficients,lrModel.intercept)) . Coefficients: [-4936.461707001148,0.8007702471080539,-3994.683052325085,-7.5033201950338,0.42095493334994133,50994.51222529955,0.2531915644818595] Intercept: 7695214.561654471 test_results = lrModel.evaluate(test_data) . print(&quot;RMSE: {}&quot;.format(test_results.rootMeanSquaredError)) print(&quot;MSE: {}&quot;.format(test_results.meanSquaredError)) print(&quot;R2: {}&quot;.format(test_results.r2)) . RMSE: 292695.0825058327 MSE: 85670411323.0962 R2: 0.7853651103073853 from pyspark.sql.functions import corr . df.select(corr(&#39;specific&#39;,&#39;gdp&#39;)).show() . +-+ corr(specific, gdp)| +-+ 0.5141876884991972| +-+ from pyspark.ml.classification import DecisionTreeClassifier,GBTClassifier,RandomForestClassifier from pyspark.ml import Pipeline . dtc = DecisionTreeClassifier(labelCol=&#39;specific_classification&#39;,featuresCol=&#39;features&#39;) rfc = RandomForestClassifier(labelCol=&#39;specific_classification&#39;,featuresCol=&#39;features&#39;) gbt = GBTClassifier(labelCol=&#39;specific_classification&#39;,featuresCol=&#39;features&#39;) . final_data = output.select(&quot;features&quot;, &quot;specific_classification&quot;) train_data,test_data = final_data.randomSplit([0.7,0.3]) . rfc_model = rfc.fit(train_data) gbt_model = gbt.fit(train_data) dtc_model = dtc.fit(train_data) . dtc_predictions = dtc_model.transform(test_data) rfc_predictions = rfc_model.transform(test_data) gbt_predictions = gbt_model.transform(test_data) . from pyspark.ml.evaluation import MulticlassClassificationEvaluator . acc_evaluator = MulticlassClassificationEvaluator(labelCol=&quot;specific_classification&quot;, predictionCol=&quot;prediction&quot;, metricName=&quot;accuracy&quot;) . dtc_acc = acc_evaluator.evaluate(dtc_predictions) rfc_acc = acc_evaluator.evaluate(rfc_predictions) gbt_acc = acc_evaluator.evaluate(gbt_predictions) . print(&#39;-&#39;*80) print(&#39;Decision tree accuracy: {0:2.2f}%&#39;.format(dtc_acc*100)) print(&#39;-&#39;*80) print(&#39;Random forest ensemble accuracy: {0:2.2f}%&#39;.format(rfc_acc*100)) print(&#39;-&#39;*80) print(&#39;GBT accuracy: {0:2.2f}%&#39;.format(gbt_acc*100)) print(&#39;-&#39;*80) . -- Decision tree accuracy: 81.98% -- Random forest ensemble accuracy: 88.29% -- GBT accuracy: 81.08% -- df.select(corr(&#39;specific_classification&#39;,&#39;fdi&#39;)).show() . +-+ corr(specific_classification, fdi)| +-+ 0.307429849493392| +-+ df.select(corr(&#39;specific_classification&#39;,&#39;gdp&#39;)).show() . +-+ corr(specific_classification, gdp)| +-+ 0.492176921599151| +-+",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/22/Linear-Regression-and-Random-Forest_GBT-Classification-with-Pyspark.html",
            "relUrl": "/2020/08/22/Linear-Regression-and-Random-Forest_GBT-Classification-with-Pyspark.html",
            "date": " • Aug 22, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "RDDs and Schemas and Data Types with Pyspark",
            "content": "from pyspark.sql import SparkSession # Load data from a CSV file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).option(&quot;inferSchema&quot;, True).option(&quot;header&quot;, True).load(file_location) display(df.take(5)) . _c0provincespecificgeneralyeargdpfdirnrrrifrregit . 0 | Anhui | 147002.0 | null | 1996 | 2093.3 | 50661 | 0.0 | 0.0 | 0.0 | 1128873 | East China | 631930 | . 1 | Anhui | 151981.0 | null | 1997 | 2347.32 | 43443 | 0.0 | 0.0 | 0.0 | 1356287 | East China | 657860 | . 2 | Anhui | 174930.0 | null | 1998 | 2542.96 | 27673 | 0.0 | 0.0 | 0.0 | 1518236 | East China | 889463 | . 3 | Anhui | 285324.0 | null | 1999 | 2712.34 | 26131 | null | null | null | 1646891 | East China | 1227364 | . 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.09 | 31847 | 0.0 | 0.0 | 0.0 | 1601508 | East China | 1499110 | . df.show() . ++--++--+-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000| 0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-++-+--+--+-+--+-+ only showing top 20 rows df.printSchema() . root -- _c0: integer (nullable = true) -- province: string (nullable = true) -- specific: double (nullable = true) -- general: double (nullable = true) -- year: integer (nullable = true) -- gdp: double (nullable = true) -- fdi: integer (nullable = true) -- rnr: double (nullable = true) -- rr: double (nullable = true) -- i: double (nullable = true) -- fr: string (nullable = true) -- reg: string (nullable = true) -- it: integer (nullable = true) df.columns . Out[64]: [&#39;_c0&#39;, &#39;province&#39;, &#39;specific&#39;, &#39;general&#39;, &#39;year&#39;, &#39;gdp&#39;, &#39;fdi&#39;, &#39;rnr&#39;, &#39;rr&#39;, &#39;i&#39;, &#39;fr&#39;, &#39;reg&#39;, &#39;it&#39;] df.describe() . Out[65]: DataFrame[summary: string, _c0: string, province: string, specific: string, general: string, year: string, gdp: string, fdi: string, rnr: string, rr: string, i: string, fr: string, reg: string, it: string] from pyspark.sql.types import StructField,StringType,IntegerType,StructType . data_schema = [ StructField(&quot;_c0&quot;, IntegerType(), True) ,StructField(&quot;province&quot;, StringType(), True) ,StructField(&quot;specific&quot;, IntegerType(), True) ,StructField(&quot;general&quot;, IntegerType(), True) ,StructField(&quot;year&quot;, IntegerType(), True) ,StructField(&quot;gdp&quot;, IntegerType(), True) ,StructField(&quot;fdi&quot;, IntegerType(), True) ,StructField(&quot;rnr&quot;, IntegerType(), True) ,StructField(&quot;rr&quot;, IntegerType(), True) ,StructField(&quot;i&quot;, IntegerType(), True) ,StructField(&quot;fr&quot;, IntegerType(), True) ,StructField(&quot;reg&quot;, StringType(), True) ,StructField(&quot;it&quot;, IntegerType(), True) ] . final_struc = StructType(fields=data_schema) . df = spark.read.format(&quot;CSV&quot;).schema(final_struc).load(file_location) . df.printSchema() . root -- _c0: integer (nullable = true) -- province: string (nullable = true) -- specific: integer (nullable = true) -- general: integer (nullable = true) -- year: integer (nullable = true) -- gdp: integer (nullable = true) -- fdi: integer (nullable = true) -- rnr: integer (nullable = true) -- rr: integer (nullable = true) -- i: integer (nullable = true) -- fr: integer (nullable = true) -- reg: string (nullable = true) -- it: integer (nullable = true) df.show() . +-+--+--+-+-+-++-+-+-+-+--+-+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +-+--+--+-+-+-++-+-+-+-+--+-+ null|province| null| null|null|null| null|null|null|null| null| reg| null| 0| Anhui| null| null|1996|null| 50661|null|null|null|1128873| East China| 631930| 1| Anhui| null| null|1997|null| 43443|null|null|null|1356287| East China| 657860| 2| Anhui| null| null|1998|null| 27673|null|null|null|1518236| East China| 889463| 3| Anhui| null| null|1999|null| 26131|null|null|null|1646891| East China|1227364| 4| Anhui| null| null|2000|null| 31847|null|null|null|1601508| East China|1499110| 5| Anhui| null| null|2001|null| 33672|null|null|null|1672445| East China|2165189| 6| Anhui| null| null|2002|null| 38375|null|null|null|1677840| East China|2404936| 7| Anhui| null| null|2003|null| 36720|null|null|null|1896479| East China|2815820| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| 10| Anhui| null| null|2006|null|139354|null|null|null|3434548| East China|5167300| 11| Anhui| null| null|2007|null|299892|null|null|null|4468640| East China|7040099| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| 16| Beijing| null| null|2000|null|168368|null|null|null|1667114|North China| 757990| 17| Beijing| null| null|2001|null|176818|null|null|null|2093925|North China|1194728| 18| Beijing| null| null|2002|null|172464|null|null|null|2511249|North China|1078754| +-+--+--+-+-+-++-+-+-+-+--+-+ only showing top 20 rows df[&#39;fr&#39;] . Out[72]: Column&lt;b&#39;fr&#39;&gt; type(df[&#39;fr&#39;]) . Out[73]: pyspark.sql.column.Column df.select(&#39;fr&#39;) . Out[74]: DataFrame[fr: int] type(df.select(&#39;fr&#39;)) . Out[75]: pyspark.sql.dataframe.DataFrame df.select(&#39;fr&#39;).show() . +-+ fr| +-+ null| 1128873| 1356287| 1518236| 1646891| 1601508| 1672445| 1677840| 1896479| null| null| 3434548| 4468640| 634562| 634562| 938788| null| 1667114| 2093925| 2511249| +-+ only showing top 20 rows df.head(2) . Out[77]: [Row(_c0=None, province=&#39;province&#39;, specific=None, general=None, year=None, gdp=None, fdi=None, rnr=None, rr=None, i=None, fr=None, reg=&#39;reg&#39;, it=None), Row(_c0=0, province=&#39;Anhui&#39;, specific=None, general=None, year=1996, gdp=None, fdi=50661, rnr=None, rr=None, i=None, fr=1128873, reg=&#39;East China&#39;, it=631930)] df.select([&#39;reg&#39;,&#39;fr&#39;]) . Out[78]: DataFrame[reg: string, fr: int] df.select([&#39;reg&#39;,&#39;fr&#39;]).show() . +--+-+ reg| fr| +--+-+ reg| null| East China|1128873| East China|1356287| East China|1518236| East China|1646891| East China|1601508| East China|1672445| East China|1677840| East China|1896479| East China| null| East China| null| East China|3434548| East China|4468640| North China| 634562| North China| 634562| North China| 938788| North China| null| North China|1667114| North China|2093925| North China|2511249| +--+-+ only showing top 20 rows df.withColumn(&#39;fiscal_revenue&#39;,df[&#39;fr&#39;]).show() . +-+--+--+-+-+-++-+-+-+-+--+-+--+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it|fiscal_revenue| +-+--+--+-+-+-++-+-+-+-+--+-+--+ null|province| null| null|null|null| null|null|null|null| null| reg| null| null| 0| Anhui| null| null|1996|null| 50661|null|null|null|1128873| East China| 631930| 1128873| 1| Anhui| null| null|1997|null| 43443|null|null|null|1356287| East China| 657860| 1356287| 2| Anhui| null| null|1998|null| 27673|null|null|null|1518236| East China| 889463| 1518236| 3| Anhui| null| null|1999|null| 26131|null|null|null|1646891| East China|1227364| 1646891| 4| Anhui| null| null|2000|null| 31847|null|null|null|1601508| East China|1499110| 1601508| 5| Anhui| null| null|2001|null| 33672|null|null|null|1672445| East China|2165189| 1672445| 6| Anhui| null| null|2002|null| 38375|null|null|null|1677840| East China|2404936| 1677840| 7| Anhui| null| null|2003|null| 36720|null|null|null|1896479| East China|2815820| 1896479| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| null| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| null| 10| Anhui| null| null|2006|null|139354|null|null|null|3434548| East China|5167300| 3434548| 11| Anhui| null| null|2007|null|299892|null|null|null|4468640| East China|7040099| 4468640| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 634562| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 634562| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 938788| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| null| 16| Beijing| null| null|2000|null|168368|null|null|null|1667114|North China| 757990| 1667114| 17| Beijing| null| null|2001|null|176818|null|null|null|2093925|North China|1194728| 2093925| 18| Beijing| null| null|2002|null|172464|null|null|null|2511249|North China|1078754| 2511249| +-+--+--+-+-+-++-+-+-+-+--+-+--+ only showing top 20 rows df.show() . +-+--+--+-+-+-++-+-+-+-+--+-+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +-+--+--+-+-+-++-+-+-+-+--+-+ null|province| null| null|null|null| null|null|null|null| null| reg| null| 0| Anhui| null| null|1996|null| 50661|null|null|null|1128873| East China| 631930| 1| Anhui| null| null|1997|null| 43443|null|null|null|1356287| East China| 657860| 2| Anhui| null| null|1998|null| 27673|null|null|null|1518236| East China| 889463| 3| Anhui| null| null|1999|null| 26131|null|null|null|1646891| East China|1227364| 4| Anhui| null| null|2000|null| 31847|null|null|null|1601508| East China|1499110| 5| Anhui| null| null|2001|null| 33672|null|null|null|1672445| East China|2165189| 6| Anhui| null| null|2002|null| 38375|null|null|null|1677840| East China|2404936| 7| Anhui| null| null|2003|null| 36720|null|null|null|1896479| East China|2815820| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| 10| Anhui| null| null|2006|null|139354|null|null|null|3434548| East China|5167300| 11| Anhui| null| null|2007|null|299892|null|null|null|4468640| East China|7040099| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| 16| Beijing| null| null|2000|null|168368|null|null|null|1667114|North China| 757990| 17| Beijing| null| null|2001|null|176818|null|null|null|2093925|North China|1194728| 18| Beijing| null| null|2002|null|172464|null|null|null|2511249|North China|1078754| +-+--+--+-+-+-++-+-+-+-+--+-+ only showing top 20 rows df.withColumnRenamed(&#39;fr&#39;,&#39;new_fiscal_revenue&#39;).show() . +-+--+--+-+-+-++-+-+-++--+-+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i|new_fiscal_revenue| reg| it| +-+--+--+-+-+-++-+-+-++--+-+ null|province| null| null|null|null| null|null|null|null| null| reg| null| 0| Anhui| null| null|1996|null| 50661|null|null|null| 1128873| East China| 631930| 1| Anhui| null| null|1997|null| 43443|null|null|null| 1356287| East China| 657860| 2| Anhui| null| null|1998|null| 27673|null|null|null| 1518236| East China| 889463| 3| Anhui| null| null|1999|null| 26131|null|null|null| 1646891| East China|1227364| 4| Anhui| null| null|2000|null| 31847|null|null|null| 1601508| East China|1499110| 5| Anhui| null| null|2001|null| 33672|null|null|null| 1672445| East China|2165189| 6| Anhui| null| null|2002|null| 38375|null|null|null| 1677840| East China|2404936| 7| Anhui| null| null|2003|null| 36720|null|null|null| 1896479| East China|2815820| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| 10| Anhui| null| null|2006|null|139354|null|null|null| 3434548| East China|5167300| 11| Anhui| null| null|2007|null|299892|null|null|null| 4468640| East China|7040099| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| 16| Beijing| null| null|2000|null|168368|null|null|null| 1667114|North China| 757990| 17| Beijing| null| null|2001|null|176818|null|null|null| 2093925|North China|1194728| 18| Beijing| null| null|2002|null|172464|null|null|null| 2511249|North China|1078754| +-+--+--+-+-+-++-+-+-++--+-+ only showing top 20 rows df.withColumn(&#39;double_fiscal_revenue&#39;,df[&#39;fr&#39;]*2).show() . +-+--+--+-+-+-++-+-+-+-+--+-++ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it|double_fiscal_revenue| +-+--+--+-+-+-++-+-+-+-+--+-++ null|province| null| null|null|null| null|null|null|null| null| reg| null| null| 0| Anhui| null| null|1996|null| 50661|null|null|null|1128873| East China| 631930| 2257746| 1| Anhui| null| null|1997|null| 43443|null|null|null|1356287| East China| 657860| 2712574| 2| Anhui| null| null|1998|null| 27673|null|null|null|1518236| East China| 889463| 3036472| 3| Anhui| null| null|1999|null| 26131|null|null|null|1646891| East China|1227364| 3293782| 4| Anhui| null| null|2000|null| 31847|null|null|null|1601508| East China|1499110| 3203016| 5| Anhui| null| null|2001|null| 33672|null|null|null|1672445| East China|2165189| 3344890| 6| Anhui| null| null|2002|null| 38375|null|null|null|1677840| East China|2404936| 3355680| 7| Anhui| null| null|2003|null| 36720|null|null|null|1896479| East China|2815820| 3792958| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| null| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| null| 10| Anhui| null| null|2006|null|139354|null|null|null|3434548| East China|5167300| 6869096| 11| Anhui| null| null|2007|null|299892|null|null|null|4468640| East China|7040099| 8937280| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 1269124| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 1269124| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 1877576| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| null| 16| Beijing| null| null|2000|null|168368|null|null|null|1667114|North China| 757990| 3334228| 17| Beijing| null| null|2001|null|176818|null|null|null|2093925|North China|1194728| 4187850| 18| Beijing| null| null|2002|null|172464|null|null|null|2511249|North China|1078754| 5022498| +-+--+--+-+-+-++-+-+-+-+--+-++ only showing top 20 rows df.withColumn(&#39;add_fiscal_revenue&#39;,df[&#39;fr&#39;]+1).show() . +-+--+--+-+-+-++-+-+-+-+--+-++ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it|add_fiscal_revenue| +-+--+--+-+-+-++-+-+-+-+--+-++ null|province| null| null|null|null| null|null|null|null| null| reg| null| null| 0| Anhui| null| null|1996|null| 50661|null|null|null|1128873| East China| 631930| 1128874| 1| Anhui| null| null|1997|null| 43443|null|null|null|1356287| East China| 657860| 1356288| 2| Anhui| null| null|1998|null| 27673|null|null|null|1518236| East China| 889463| 1518237| 3| Anhui| null| null|1999|null| 26131|null|null|null|1646891| East China|1227364| 1646892| 4| Anhui| null| null|2000|null| 31847|null|null|null|1601508| East China|1499110| 1601509| 5| Anhui| null| null|2001|null| 33672|null|null|null|1672445| East China|2165189| 1672446| 6| Anhui| null| null|2002|null| 38375|null|null|null|1677840| East China|2404936| 1677841| 7| Anhui| null| null|2003|null| 36720|null|null|null|1896479| East China|2815820| 1896480| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| null| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| null| 10| Anhui| null| null|2006|null|139354|null|null|null|3434548| East China|5167300| 3434549| 11| Anhui| null| null|2007|null|299892|null|null|null|4468640| East China|7040099| 4468641| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 634563| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 634563| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 938789| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| null| 16| Beijing| null| null|2000|null|168368|null|null|null|1667114|North China| 757990| 1667115| 17| Beijing| null| null|2001|null|176818|null|null|null|2093925|North China|1194728| 2093926| 18| Beijing| null| null|2002|null|172464|null|null|null|2511249|North China|1078754| 2511250| +-+--+--+-+-+-++-+-+-+-+--+-++ only showing top 20 rows df.withColumn(&#39;half_fiscal_revenue&#39;,df[&#39;fr&#39;]/2).show() . +-+--+--+-+-+-++-+-+-+-+--+-+-+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it|half_fiscal_revenue| +-+--+--+-+-+-++-+-+-+-+--+-+-+ null|province| null| null|null|null| null|null|null|null| null| reg| null| null| 0| Anhui| null| null|1996|null| 50661|null|null|null|1128873| East China| 631930| 564436.5| 1| Anhui| null| null|1997|null| 43443|null|null|null|1356287| East China| 657860| 678143.5| 2| Anhui| null| null|1998|null| 27673|null|null|null|1518236| East China| 889463| 759118.0| 3| Anhui| null| null|1999|null| 26131|null|null|null|1646891| East China|1227364| 823445.5| 4| Anhui| null| null|2000|null| 31847|null|null|null|1601508| East China|1499110| 800754.0| 5| Anhui| null| null|2001|null| 33672|null|null|null|1672445| East China|2165189| 836222.5| 6| Anhui| null| null|2002|null| 38375|null|null|null|1677840| East China|2404936| 838920.0| 7| Anhui| null| null|2003|null| 36720|null|null|null|1896479| East China|2815820| 948239.5| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| null| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| null| 10| Anhui| null| null|2006|null|139354|null|null|null|3434548| East China|5167300| 1717274.0| 11| Anhui| null| null|2007|null|299892|null|null|null|4468640| East China|7040099| 2234320.0| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 317281.0| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 317281.0| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 469394.0| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| null| 16| Beijing| null| null|2000|null|168368|null|null|null|1667114|North China| 757990| 833557.0| 17| Beijing| null| null|2001|null|176818|null|null|null|2093925|North China|1194728| 1046962.5| 18| Beijing| null| null|2002|null|172464|null|null|null|2511249|North China|1078754| 1255624.5| +-+--+--+-+-+-++-+-+-+-+--+-+-+ only showing top 20 rows df.withColumn(&#39;half_fr&#39;,df[&#39;fr&#39;]/2) . Out[86]: DataFrame[_c0: int, province: string, specific: int, general: int, year: int, gdp: int, fdi: int, rnr: int, rr: int, i: int, fr: int, reg: string, it: int, half_fr: double] df.createOrReplaceTempView(&quot;economic_data&quot;) . sql_results = spark.sql(&quot;SELECT * FROM economic_data&quot;) . sql_results . Out[89]: DataFrame[_c0: int, province: string, specific: int, general: int, year: int, gdp: int, fdi: int, rnr: int, rr: int, i: int, fr: int, reg: string, it: int] sql_results.show() . +-+--+--+-+-+-++-+-+-+-+--+-+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +-+--+--+-+-+-++-+-+-+-+--+-+ null|province| null| null|null|null| null|null|null|null| null| reg| null| 0| Anhui| null| null|1996|null| 50661|null|null|null|1128873| East China| 631930| 1| Anhui| null| null|1997|null| 43443|null|null|null|1356287| East China| 657860| 2| Anhui| null| null|1998|null| 27673|null|null|null|1518236| East China| 889463| 3| Anhui| null| null|1999|null| 26131|null|null|null|1646891| East China|1227364| 4| Anhui| null| null|2000|null| 31847|null|null|null|1601508| East China|1499110| 5| Anhui| null| null|2001|null| 33672|null|null|null|1672445| East China|2165189| 6| Anhui| null| null|2002|null| 38375|null|null|null|1677840| East China|2404936| 7| Anhui| null| null|2003|null| 36720|null|null|null|1896479| East China|2815820| 8| Anhui| null| null|2004|null| 54669|null|null|null| null| East China|3422176| 9| Anhui| null| null|2005|null| 69000|null|null|null| null| East China|3874846| 10| Anhui| null| null|2006|null|139354|null|null|null|3434548| East China|5167300| 11| Anhui| null| null|2007|null|299892|null|null|null|4468640| East China|7040099| 12| Beijing| null| null|1996|null|155290|null|null|null| 634562|North China| 508135| 13| Beijing| null| null|1997|null|159286|null|null|null| 634562|North China| 569283| 14| Beijing| null| null|1998|null|216800|null|null|null| 938788|North China| 695528| 15| Beijing| null| null|1999|null|197525|null|null|null| null|North China| 944047| 16| Beijing| null| null|2000|null|168368|null|null|null|1667114|North China| 757990| 17| Beijing| null| null|2001|null|176818|null|null|null|2093925|North China|1194728| 18| Beijing| null| null|2002|null|172464|null|null|null|2511249|North China|1078754| +-+--+--+-+-+-++-+-+-+-+--+-+ only showing top 20 rows spark.sql(&quot;SELECT * FROM economic_data WHERE fr=634562&quot;).show() . ++--+--+-+-+-++-+-+-++--++ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--+--+-+-+-++-+-+-++--++ 12| Beijing| null| null|1996|null|155290|null|null|null|634562|North China|508135| 13| Beijing| null| null|1997|null|159286|null|null|null|634562|North China|569283| ++--+--+-+-+-++-+-+-++--++",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/21/RDDs-and-Schemas-and-Data-Types-with-Pyspark.html",
            "relUrl": "/2020/08/21/RDDs-and-Schemas-and-Data-Types-with-Pyspark.html",
            "date": " • Aug 21, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Dataframes, Formatting, Casting Data Type and Correlation with Pyspark",
            "content": "from pyspark.sql import SparkSession # Load data from a CSV file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).option(&quot;inferSchema&quot;, True).option(&quot;header&quot;, True).load(file_location) display(df.take(5)) . _c0provincespecificgeneralyeargdpfdirnrrrifrregit . 0 | Anhui | 147002.0 | null | 1996 | 2093.3 | 50661 | 0.0 | 0.0 | 0.0 | 1128873 | East China | 631930 | . 1 | Anhui | 151981.0 | null | 1997 | 2347.32 | 43443 | 0.0 | 0.0 | 0.0 | 1356287 | East China | 657860 | . 2 | Anhui | 174930.0 | null | 1998 | 2542.96 | 27673 | 0.0 | 0.0 | 0.0 | 1518236 | East China | 889463 | . 3 | Anhui | 285324.0 | null | 1999 | 2712.34 | 26131 | null | null | null | 1646891 | East China | 1227364 | . 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.09 | 31847 | 0.0 | 0.0 | 0.0 | 1601508 | East China | 1499110 | . df.columns . Out[85]: [&#39;_c0&#39;, &#39;province&#39;, &#39;specific&#39;, &#39;general&#39;, &#39;year&#39;, &#39;gdp&#39;, &#39;fdi&#39;, &#39;rnr&#39;, &#39;rr&#39;, &#39;i&#39;, &#39;fr&#39;, &#39;reg&#39;, &#39;it&#39;] df.printSchema() . root -- _c0: integer (nullable = true) -- province: string (nullable = true) -- specific: double (nullable = true) -- general: double (nullable = true) -- year: integer (nullable = true) -- gdp: double (nullable = true) -- fdi: integer (nullable = true) -- rnr: double (nullable = true) -- rr: double (nullable = true) -- i: double (nullable = true) -- fr: string (nullable = true) -- reg: string (nullable = true) -- it: integer (nullable = true) # for row in df.head(5): # print(row) # print(&#39; n&#39;) . df.describe().show() . +-++--+--+++--++-+--+-++++ summary| _c0|province| specific| general| year| gdp| fdi| rnr| rr| i| fr| reg| it| +-++--+--+++--++-+--+-++++ count| 360| 360| 356| 169| 360| 360| 360| 294| 296| 287| 295| 360| 360| mean| 179.5| null|583470.7303370787|309127.53846153844| 2001.5|4428.653416666667|196139.38333333333| 0.0355944252244898|0.059688621057432424|0.08376351662369343|2522449.0034013605| null|2165819.2583333333| stddev|104.06728592598157| null|654055.3290782663| 355423.5760674793|3.4568570586927794|4484.668659976412|303043.97011891654|0.16061503029299648| 0.15673351824073453| 0.1838933104683607|3491329.8613106664| null|1769294.2935487411| min| 0| Anhui| 8964.0| 0.0| 1996| 64.98| 2| 0.0| 0.0| 0.0| #REF!| East China| 147897| max| 359|Zhejiang| 3937966.0| 1737800.0| 2007| 31777.01| 1743140| 1.214285714| 0.84| 1.05| 9898522|Southwest China| 10533312| +-++--+--+++--++-+--+-++++ df.describe().printSchema() . root -- summary: string (nullable = true) -- _c0: string (nullable = true) -- province: string (nullable = true) -- specific: string (nullable = true) -- general: string (nullable = true) -- year: string (nullable = true) -- gdp: string (nullable = true) -- fdi: string (nullable = true) -- rnr: string (nullable = true) -- rr: string (nullable = true) -- i: string (nullable = true) -- fr: string (nullable = true) -- reg: string (nullable = true) -- it: string (nullable = true) from pyspark.sql.functions import format_number . result = df.describe() result.select(result[&#39;province&#39;] ,format_number(result[&#39;specific&#39;].cast(&#39;float&#39;),2).alias(&#39;specific&#39;) ,format_number(result[&#39;general&#39;].cast(&#39;float&#39;),2).alias(&#39;general&#39;) ,format_number(result[&#39;year&#39;].cast(&#39;int&#39;),2).alias(&#39;year&#39;),format_number(result[&#39;gdp&#39;].cast(&#39;float&#39;),2).alias(&#39;gdp&#39;) ,format_number(result[&#39;rnr&#39;].cast(&#39;int&#39;),2).alias(&#39;rnr&#39;),format_number(result[&#39;rr&#39;].cast(&#39;float&#39;),2).alias(&#39;rr&#39;) ,format_number(result[&#39;fdi&#39;].cast(&#39;int&#39;),2).alias(&#39;fdi&#39;),format_number(result[&#39;it&#39;].cast(&#39;float&#39;),2).alias(&#39;it&#39;) ,result[&#39;reg&#39;].cast(&#39;string&#39;).alias(&#39;reg&#39;) ).show() . +--+++--+++++-++ province| specific| general| year| gdp| rnr| rr| fdi| it| reg| +--+++--+++++-++ 360| 356.00| 169.00| 360.00| 360.00|294.00|296.00| 360.00| 360.00| 360| null| 583,470.75| 309,127.53|2,001.00| 4,428.65| 0.00| 0.06| 196,139.00| 2,165,819.25| null| null| 654,055.31| 355,423.56| 3.00| 4,484.67| 0.00| 0.16| 303,043.00| 1,769,294.25| null| Anhui| 8,964.00| 0.00|1,996.00| 64.98| 0.00| 0.00| 2.00| 147,897.00| East China| Zhejiang|3,937,966.00|1,737,800.00|2,007.00|31,777.01| 1.00| 0.84|1,743,140.00|10,533,312.00|Southwest China| +--+++--+++++-++ df2 = df.withColumn(&quot;specific_gdp_ratio&quot;,df[&quot;specific&quot;]/(df[&quot;gdp&quot;]*100))#.show() . df2.select(&#39;specific_gdp_ratio&#39;).show() . ++ specific_gdp_ratio| ++ 0.7022500358285959| 0.6474660463848132| 0.6878991411583352| 1.0519477646607727| 0.673928100093381| 0.7727761333780966| 1.233475958314866| 1.5783421826051272| 1.8877587040110941| 1.6792756118029895| 2.3850666666666664| 3.0077639751552794| 0.9275486250838364| 0.7989880072601573| 1.0314658544998698| 1.448708759827088| 0.8912058855158366| 1.1918224576316896| 1.2944820393974508| 1.283311464867661| ++ only showing top 20 rows df.orderBy(df[&quot;specific&quot;].asc()).head(1)[0][0] . Out[94]: 24 from pyspark.sql.functions import mean df.select(mean(&quot;specific&quot;)).show() . +--+ avg(specific)| +--+ 583470.7303370787| +--+ from pyspark.sql.functions import max,min . df.select(max(&quot;specific&quot;),min(&quot;specific&quot;)).show() . +-+-+ max(specific)|min(specific)| +-+-+ 3937966.0| 8964.0| +-+-+ df.filter(&quot;specific &lt; 60000&quot;).count() . Out[98]: 23 df.filter(df[&#39;specific&#39;] &lt; 60000).count() . Out[99]: 23 from pyspark.sql.functions import count result = df.filter(df[&#39;specific&#39;] &lt; 60000) result.select(count(&#39;specific&#39;)).show() . ++ count(specific)| ++ 23| ++ (df.filter(df[&quot;gdp&quot;]&gt;8000).count()*1.0/df.count())*100 . Out[101]: 14.444444444444443 from pyspark.sql.functions import corr df.select(corr(&quot;gdp&quot;,&quot;fdi&quot;)).show() . ++ corr(gdp, fdi)| ++ 0.8366328478935896| ++ from pyspark.sql.functions import year #yeardf = df.withColumn(&quot;Year&quot;,year(df[&quot;year&quot;])) . max_df = df.groupBy(&#39;year&#39;).max() . max_df.select(&#39;year&#39;,&#39;max(gdp)&#39;).show() . +-+--+ year|max(gdp)| +-+--+ 2003|15844.64| 2007|31777.01| 2006|26587.76| 1997| 7774.53| 2004|18864.62| 1996| 6834.97| 1998| 8530.88| 2001|12039.25| 2005|22557.37| 2000|10741.25| 1999| 9250.68| 2002|13502.42| +-+--+ from pyspark.sql.functions import month . #df.select(&quot;year&quot;,&quot;avg(gdp)&quot;).orderBy(&#39;year&#39;).show() .",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/20/Pyspark-Dataframes-Data-Types.html",
            "relUrl": "/2020/08/20/Pyspark-Dataframes-Data-Types.html",
            "date": " • Aug 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Dataframe Filitering and Operations with Pyspark",
            "content": "from pyspark.sql import SparkSession # Load data from a CSV file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).option(&quot;inferSchema&quot;, True).option(&quot;header&quot;, True).load(file_location) display(df.take(5)) . _c0provincespecificgeneralyeargdpfdirnrrrifrregit . 0 | Anhui | 147002.0 | null | 1996 | 2093.3 | 50661 | 0.0 | 0.0 | 0.0 | 1128873 | East China | 631930 | . 1 | Anhui | 151981.0 | null | 1997 | 2347.32 | 43443 | 0.0 | 0.0 | 0.0 | 1356287 | East China | 657860 | . 2 | Anhui | 174930.0 | null | 1998 | 2542.96 | 27673 | 0.0 | 0.0 | 0.0 | 1518236 | East China | 889463 | . 3 | Anhui | 285324.0 | null | 1999 | 2712.34 | 26131 | null | null | null | 1646891 | East China | 1227364 | . 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.09 | 31847 | 0.0 | 0.0 | 0.0 | 1601508 | East China | 1499110 | . df.filter(&quot;specific&lt;10000&quot;).show() . ++--+--+-+-+-++++-+-+-+-+ _c0|province|specific|general|year| gdp| fdi|rnr| rr| i| fr| reg| it| ++--+--+-+-+-++++-+-+-+-+ 268|Shanghai| 8964.0| null|2000|4771.17|316014|0.0|0.0|0.44|2224124|East China|1212473| 269|Shanghai| 9834.0| null|2001|5210.12|429159|0.0|0.0|0.44|2947285|East China|1053917| ++--+--+-+-+-++++-+-+-+-+ df.filter(&quot;specific&lt;10000&quot;).select(&#39;province&#39;).show() . +--+ province| +--+ Shanghai| Shanghai| +--+ df.filter(&quot;specific&lt;10000&quot;).select([&#39;province&#39;,&#39;year&#39;]).show() . +--+-+ province|year| +--+-+ Shanghai|2000| Shanghai|2001| +--+-+ df.filter(df[&quot;specific&quot;] &lt; 10000).show() . ++--+--+-+-+-++++-+-+-+-+ _c0|province|specific|general|year| gdp| fdi|rnr| rr| i| fr| reg| it| ++--+--+-+-+-++++-+-+-+-+ 268|Shanghai| 8964.0| null|2000|4771.17|316014|0.0|0.0|0.44|2224124|East China|1212473| 269|Shanghai| 9834.0| null|2001|5210.12|429159|0.0|0.0|0.44|2947285|East China|1053917| ++--+--+-+-+-++++-+-+-+-+ df.filter((df[&quot;specific&quot;] &lt; 55000) &amp; (df[&#39;gdp&#39;] &gt; 200) ).show() . ++--+--+-+-+--++-+-+-+-+-+-+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--+--+-+-+--++-+-+-+-+-+-+ 98| Hainan| 54462.0| null|1998| 442.13| 71715|null|null|null| 236461|South Central China| 177748| 216| Ningxia| 32088.0| null|1996| 202.9| 2826|null|null|null| 90805| Northwest China| 178668| 217| Ningxia| 44267.0| null|1997| 224.59| 671|null|null|null| 102083| Northwest China| 195295| 268|Shanghai| 8964.0| null|2000| 4771.17|316014| 0.0| 0.0|0.44|2224124| East China|1212473| 269|Shanghai| 9834.0| null|2001| 5210.12|429159| 0.0| 0.0|0.44|2947285| East China|1053917| 270|Shanghai| 19985.0| null|2002| 5741.03|427229| 0.0| 0.0|0.44|3380397| East China|1572208| 271|Shanghai| 23547.0| null|2003| 6694.23|546849| 0.0|0.53| 0.0|4461153| East China|2031496| 272|Shanghai| 29943.0| null|2004| 8072.83|654100| 0.0|0.53| 0.0| null| East China|2703643| 273|Shanghai| 29943.0| null|2005| 9247.66|685000| 0.0|0.53| 0.0| null| East China|2140461| 274|Shanghai| 42928.0| null|2006|10572.24|710700| 0.0|0.53| 0.0|8175966| East China|2239987| 302| Tianjin| 39364.0| null|1998| 1374.6|211361|null|null|null| 540178| North China| 361723| 303| Tianjin| 45463.0| null|1999| 1500.95|176399| 0.0| 0.0| 0.0| 605662| North China| 422522| 304| Tianjin| 51821.0| null|2000| 1701.88|116601| 0.0| 0.0| 0.0| 757464| North China| 547120| 305| Tianjin| 35084.0| null|2001| 1919.09|213348| 0.0| 0.0| 0.0| 942763| North China| 688810| ++--+--+-+-+--++-+-+-+-+-+-+ df.filter((df[&quot;specific&quot;] &lt; 55000) | (df[&#39;gdp&#39;] &gt; 20000) ).show() . ++++--+-+--+-+--+-+--+--+-+-+ _c0| province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++++--+-+--+-+--+-+--+--+-+-+ 69|Guangdong|1491588.0| null|2005|22557.37|1236400|0.027027027000000002| 0.0| 0.0| null|South Central China|4327217| 70|Guangdong|1897575.0|498913.0|2006|26587.76|1451065|0.027027027000000002| 0.0| 0.0|16804703|South Central China|4559252| 71|Guangdong| 859482.0| 0.0|2007|31777.01|1712603|0.027027027000000002| 0.0| 0.0|27858007|South Central China|4947824| 98| Hainan| 54462.0| null|1998| 442.13| 71715| null|null| null| 236461|South Central China| 177748| 179| Jiangsu|1188989.0| 0.0|2007|21742.05|1743140| 0.0| 0.0|0.275862069|22377276| East China|3557071| 216| Ningxia| 32088.0| null|1996| 202.9| 2826| null|null| null| 90805| Northwest China| 178668| 217| Ningxia| 44267.0| null|1997| 224.59| 671| null|null| null| 102083| Northwest China| 195295| 228| Qinghai| 37976.0| null|1996| 184.17| 576| null|null| null| 73260| Northwest China| 218361| 262| Shandong|1204547.0|112137.0|2006|21900.19|1000069| 0.0| 0.0| 0.0|11673659| East China|5304833| 263| Shandong|2121243.0|581800.0|2007|25776.91|1101159| 0.0| 0.0| 0.0|16753980| East China|6357869| 268| Shanghai| 8964.0| null|2000| 4771.17| 316014| 0.0| 0.0| 0.44| 2224124| East China|1212473| 269| Shanghai| 9834.0| null|2001| 5210.12| 429159| 0.0| 0.0| 0.44| 2947285| East China|1053917| 270| Shanghai| 19985.0| null|2002| 5741.03| 427229| 0.0| 0.0| 0.44| 3380397| East China|1572208| 271| Shanghai| 23547.0| null|2003| 6694.23| 546849| 0.0|0.53| 0.0| 4461153| East China|2031496| 272| Shanghai| 29943.0| null|2004| 8072.83| 654100| 0.0|0.53| 0.0| null| East China|2703643| 273| Shanghai| 29943.0| null|2005| 9247.66| 685000| 0.0|0.53| 0.0| null| East China|2140461| 274| Shanghai| 42928.0| null|2006|10572.24| 710700| 0.0|0.53| 0.0| 8175966| East China|2239987| 302| Tianjin| 39364.0| null|1998| 1374.6| 211361| null|null| null| 540178| North China| 361723| 303| Tianjin| 45463.0| null|1999| 1500.95| 176399| 0.0| 0.0| 0.0| 605662| North China| 422522| 304| Tianjin| 51821.0| null|2000| 1701.88| 116601| 0.0| 0.0| 0.0| 757464| North China| 547120| ++++--+-+--+-+--+-+--+--+-+-+ only showing top 20 rows df.filter((df[&quot;specific&quot;] &lt; 55000) &amp; ~(df[&#39;gdp&#39;] &gt; 20000) ).show() . ++--+--+-+-+--++--+-+-+-+-+-+ _c0|province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--+--+-+-+--++--+-+-+-+-+-+ 98| Hainan| 54462.0| null|1998| 442.13| 71715| null|null|null| 236461|South Central China| 177748| 216| Ningxia| 32088.0| null|1996| 202.9| 2826| null|null|null| 90805| Northwest China| 178668| 217| Ningxia| 44267.0| null|1997| 224.59| 671| null|null|null| 102083| Northwest China| 195295| 228| Qinghai| 37976.0| null|1996| 184.17| 576| null|null|null| 73260| Northwest China| 218361| 268|Shanghai| 8964.0| null|2000| 4771.17|316014| 0.0| 0.0|0.44|2224124| East China|1212473| 269|Shanghai| 9834.0| null|2001| 5210.12|429159| 0.0| 0.0|0.44|2947285| East China|1053917| 270|Shanghai| 19985.0| null|2002| 5741.03|427229| 0.0| 0.0|0.44|3380397| East China|1572208| 271|Shanghai| 23547.0| null|2003| 6694.23|546849| 0.0|0.53| 0.0|4461153| East China|2031496| 272|Shanghai| 29943.0| null|2004| 8072.83|654100| 0.0|0.53| 0.0| null| East China|2703643| 273|Shanghai| 29943.0| null|2005| 9247.66|685000| 0.0|0.53| 0.0| null| East China|2140461| 274|Shanghai| 42928.0| null|2006|10572.24|710700| 0.0|0.53| 0.0|8175966| East China|2239987| 302| Tianjin| 39364.0| null|1998| 1374.6|211361| null|null|null| 540178| North China| 361723| 303| Tianjin| 45463.0| null|1999| 1500.95|176399| 0.0| 0.0| 0.0| 605662| North China| 422522| 304| Tianjin| 51821.0| null|2000| 1701.88|116601| 0.0| 0.0| 0.0| 757464| North China| 547120| 305| Tianjin| 35084.0| null|2001| 1919.09|213348| 0.0| 0.0| 0.0| 942763| North China| 688810| 312| Tibet| 18829.0| null|1996| 64.98| 679|0.181818182| 0.0| 0.0| 27801| Southwest China| 306114| 313| Tibet| 25185.0| null|1997| 77.24| 63|0.181818182| 0.0| 0.0| 33787| Southwest China| 346368| 314| Tibet| 48197.0| null|1998| 91.5| 481| 0.0|0.24| 0.0| 3810| Southwest China| 415547| ++--+--+-+-+--++--+-+-+-+-+-+ df.filter(df[&quot;specific&quot;] == 8964.0).show() . ++--+--+-+-+-++++-+-+-+-+ _c0|province|specific|general|year| gdp| fdi|rnr| rr| i| fr| reg| it| ++--+--+-+-+-++++-+-+-+-+ 268|Shanghai| 8964.0| null|2000|4771.17|316014|0.0|0.0|0.44|2224124|East China|1212473| ++--+--+-+-+-++++-+-+-+-+ df.filter(df[&quot;province&quot;] == &quot;Zhejiang&quot;).show() . ++--++--+-+--+-+--+--+--+--+-+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+--+-+--+--+--+--+-+-+ 348|Zhejiang| 273253.0| null|1996| 4188.53| 152021| 0.0| 0.0| 0.0| 1291252|East China| 740327| 349|Zhejiang| 330558.0| null|1997| 4686.11| 150345| 0.0| 0.0| 0.0| 1432453|East China| 814253| 350|Zhejiang| 426756.0| null|1998| 5052.62| 131802| 0.0| 0.0| 0.0| 1761084|East China| 923455| 351|Zhejiang| 586457.0| null|1999| 5443.92| 123262| 0.0| 0.0| 0.0| 2146200|East China|1001703| 352|Zhejiang| 408151.0| null|2000| 6141.03| 161266| 0.0| 0.0| 0.0| 2955508|East China|1135215| 353|Zhejiang| 358714.0| null|2001| 6898.34| 221162| 0.0| 0.0| 0.0| 4436868|East China|1203372| 354|Zhejiang| 365437.0|321686.0|2002| 8003.67| 307610| 0.0| 0.0| 0.0| 4958329|East China|1962633| 355|Zhejiang| 391292.0|260313.0|2003| 9705.02| 498055|1.214285714|0.035714286|0.035714286| 6217715|East China|2261631| 356|Zhejiang| 656175.0|276652.0|2004| 11648.7| 668128|1.214285714|0.035714286|0.035714286| null|East China|3162299| 357|Zhejiang| 656175.0| null|2005|13417.68| 772000|1.214285714|0.035714286|0.035714286| null|East China|2370200| 358|Zhejiang|1017303.0|394795.0|2006|15718.47| 888935|1.214285714|0.035714286|0.035714286|11537149|East China|2553268| 359|Zhejiang| 844647.0| 0.0|2007|18753.73|1036576|0.047619048| 0.0| 0.0|16494981|East China|2939778| ++--++--+-+--+-+--+--+--+--+-+-+ df.filter(df[&quot;specific&quot;] == 8964.0).collect() . Out[15]: [Row(_c0=268, province=&#39;Shanghai&#39;, specific=8964.0, general=None, year=2000, gdp=4771.17, fdi=316014, rnr=0.0, rr=0.0, i=0.44, fr=&#39;2224124&#39;, reg=&#39;East China&#39;, it=1212473)] result = df.filter(df[&quot;specific&quot;] == 8964.0).collect() . type(result[0]) . Out[17]: pyspark.sql.types.Row row = result[0] . row.asDict() . Out[19]: {&#39;_c0&#39;: 268, &#39;province&#39;: &#39;Shanghai&#39;, &#39;specific&#39;: 8964.0, &#39;general&#39;: None, &#39;year&#39;: 2000, &#39;gdp&#39;: 4771.17, &#39;fdi&#39;: 316014, &#39;rnr&#39;: 0.0, &#39;rr&#39;: 0.0, &#39;i&#39;: 0.44, &#39;fr&#39;: &#39;2224124&#39;, &#39;reg&#39;: &#39;East China&#39;, &#39;it&#39;: 1212473} for item in result[0]: print(item) . 268 Shanghai 8964.0 None 2000 4771.17 316014 0.0 0.0 0.44 2224124 East China 1212473",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/19/Pyspark-Filtering.html",
            "relUrl": "/2020/08/19/Pyspark-Filtering.html",
            "date": " • Aug 19, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "Handling Missing Data with Pyspark",
            "content": "from pyspark.sql import SparkSession from pyspark.sql.functions import countDistinct, avg,stddev # Load data from a CSV file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).option(&quot;inferSchema&quot;, True).option(&quot;header&quot;, True).load(file_location) display(df.take(5)) . _c0provincespecificgeneralyeargdpfdirnrrrifrregit . 0 | Anhui | 147002.0 | null | 1996 | 2093.3 | 50661 | 0.0 | 0.0 | 0.0 | 1128873 | East China | 631930 | . 1 | Anhui | 151981.0 | null | 1997 | 2347.32 | 43443 | 0.0 | 0.0 | 0.0 | 1356287 | East China | 657860 | . 2 | Anhui | 174930.0 | null | 1998 | 2542.96 | 27673 | 0.0 | 0.0 | 0.0 | 1518236 | East China | 889463 | . 3 | Anhui | 285324.0 | null | 1999 | 2712.34 | 26131 | null | null | null | 1646891 | East China | 1227364 | . 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.09 | 31847 | 0.0 | 0.0 | 0.0 | 1601508 | East China | 1499110 | . df.show() . ++--++--+-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000| 0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-++-+--+--+-+--+-+ only showing top 20 rows # Has to have at least 2 NON-null values df.na.drop(thresh=2).show() . ++--++--+-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000| 0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-++-+--+--+-+--+-+ only showing top 20 rows # Drop any row that contains missing data df.na.drop().show() . +++++-+-++-+--+--+--++-+ _c0| province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +++++-+-++-+--+--+--++-+ 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0| 1601508| East China|1499110| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0| 1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0| 1896479| East China|2815820| 10| Anhui|1457872.0| 279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324| 3434548| East China|5167300| 11| Anhui|2213991.0| 178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324| 4468640| East China|7040099| 16| Beijing| 281769.0| 188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53| 1667114| North China| 757990| 18| Beijing| 558569.0| 280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53| 2511249| North China|1078754| 19| Beijing| 642581.0| 269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0| 2823366| North China|1426600| 22| Beijing|1315102.0| 405966.0|2006|8117.78|455191| 0.0|0.794871795| 0.0| 4830392| North China|1782317| 23| Beijing| 752279.0|1023453.0|2007|9846.81|506572| 0.0|0.794871795| 0.0|14926380| North China|1962192| 34|Chongqing| 833423.0| 150000.0|2006|3907.23| 69595|0.09677419400000001| 0.0| 0.0| 1762409|Southwest China|3124234| 35|Chongqing|1791403.0| 447900.0|2007|4676.13|108534|0.09677419400000001| 0.0| 0.0| 4427000|Southwest China|3923569| 40| Fujian| 142650.0| 71807.0|2000|3764.54|343191| 0.0| 0.0| 0.0| 2110577| East China| 819028| 42| Fujian| 137190.0| 59263.0|2002|4467.55|383837| 0.22| 0.3| 0.0| 2373047| East China|1184990| 43| Fujian| 148812.0| 68142.0|2003|4983.67|259903| 0.0| 0.0| 0.3| 2648861| East China|1364980| 46| Fujian| 397517.0| 149549.0|2006|7583.85|322047| 0.4| 0.0| 0.0| 4830320| East China|2135224| 47| Fujian| 753552.0| 317700.0|2007|9248.53|406058| 0.4| 0.0| 0.0| 6994577| East China|2649011| 52| Gansu| 223984.0| 58533.0|2000|1052.88| 6235| 0.0|0.153846154| 0.0| 505196|Northwest China|1258100| 54| Gansu| 337894.0| 129791.0|2002|1232.03| 6121| 0.0| 0.13| 0.0| 597159|Northwest China|1898911| 58| Gansu| 833430.0| 516342.0|2006|2277.35| 2954| 0.0| 0.0|0.128205128| 924080|Northwest China|3847158| +++++-+-++-+--+--+--++-+ only showing top 20 rows df.na.drop(subset=[&quot;general&quot;]).show() . +++++-+-++-+--+--+--++-+ _c0| province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +++++-+-++-+--+--+--++-+ 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0| 1601508| East China|1499110| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0| 1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0| 1896479| East China|2815820| 8| Anhui| 898441.0| 349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 10| Anhui|1457872.0| 279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324| 3434548| East China|5167300| 11| Anhui|2213991.0| 178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324| 4468640| East China|7040099| 16| Beijing| 281769.0| 188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53| 1667114| North China| 757990| 18| Beijing| 558569.0| 280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53| 2511249| North China|1078754| 19| Beijing| 642581.0| 269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0| 2823366| North China|1426600| 20| Beijing|1009936.0| 309025.0|2004|6033.21|308354| 0.0|0.794871795| 0.0| null| North China|1644601| 22| Beijing|1315102.0| 405966.0|2006|8117.78|455191| 0.0|0.794871795| 0.0| 4830392| North China|1782317| 23| Beijing| 752279.0|1023453.0|2007|9846.81|506572| 0.0|0.794871795| 0.0|14926380| North China|1962192| 30|Chongqing| 311770.0| 41907.0|2002|2232.86| 19576| null| null| null| 762806|Southwest China|1906968| 31|Chongqing| 335715.0| 18700.0|2003|2555.72| 26083| null| null| null| 929935|Southwest China|1778125| 32|Chongqing| 568835.0| 97500.0|2004|3034.58| 40508| null| null| null| null|Southwest China|2197948| 34|Chongqing| 833423.0| 150000.0|2006|3907.23| 69595|0.09677419400000001| 0.0| 0.0| 1762409|Southwest China|3124234| 35|Chongqing|1791403.0| 447900.0|2007|4676.13|108534|0.09677419400000001| 0.0| 0.0| 4427000|Southwest China|3923569| 40| Fujian| 142650.0| 71807.0|2000|3764.54|343191| 0.0| 0.0| 0.0| 2110577| East China| 819028| 42| Fujian| 137190.0| 59263.0|2002|4467.55|383837| 0.22| 0.3| 0.0| 2373047| East China|1184990| 43| Fujian| 148812.0| 68142.0|2003|4983.67|259903| 0.0| 0.0| 0.3| 2648861| East China|1364980| +++++-+-++-+--+--+--++-+ only showing top 20 rows df.na.drop(how=&#39;any&#39;).show() . +++++-+-++-+--+--+--++-+ _c0| province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +++++-+-++-+--+--+--++-+ 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0| 1601508| East China|1499110| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0| 1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0| 1896479| East China|2815820| 10| Anhui|1457872.0| 279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324| 3434548| East China|5167300| 11| Anhui|2213991.0| 178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324| 4468640| East China|7040099| 16| Beijing| 281769.0| 188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53| 1667114| North China| 757990| 18| Beijing| 558569.0| 280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53| 2511249| North China|1078754| 19| Beijing| 642581.0| 269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0| 2823366| North China|1426600| 22| Beijing|1315102.0| 405966.0|2006|8117.78|455191| 0.0|0.794871795| 0.0| 4830392| North China|1782317| 23| Beijing| 752279.0|1023453.0|2007|9846.81|506572| 0.0|0.794871795| 0.0|14926380| North China|1962192| 34|Chongqing| 833423.0| 150000.0|2006|3907.23| 69595|0.09677419400000001| 0.0| 0.0| 1762409|Southwest China|3124234| 35|Chongqing|1791403.0| 447900.0|2007|4676.13|108534|0.09677419400000001| 0.0| 0.0| 4427000|Southwest China|3923569| 40| Fujian| 142650.0| 71807.0|2000|3764.54|343191| 0.0| 0.0| 0.0| 2110577| East China| 819028| 42| Fujian| 137190.0| 59263.0|2002|4467.55|383837| 0.22| 0.3| 0.0| 2373047| East China|1184990| 43| Fujian| 148812.0| 68142.0|2003|4983.67|259903| 0.0| 0.0| 0.3| 2648861| East China|1364980| 46| Fujian| 397517.0| 149549.0|2006|7583.85|322047| 0.4| 0.0| 0.0| 4830320| East China|2135224| 47| Fujian| 753552.0| 317700.0|2007|9248.53|406058| 0.4| 0.0| 0.0| 6994577| East China|2649011| 52| Gansu| 223984.0| 58533.0|2000|1052.88| 6235| 0.0|0.153846154| 0.0| 505196|Northwest China|1258100| 54| Gansu| 337894.0| 129791.0|2002|1232.03| 6121| 0.0| 0.13| 0.0| 597159|Northwest China|1898911| 58| Gansu| 833430.0| 516342.0|2006|2277.35| 2954| 0.0| 0.0|0.128205128| 924080|Northwest China|3847158| +++++-+-++-+--+--+--++-+ only showing top 20 rows df.na.drop(how=&#39;all&#39;).show() . ++--++--+-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000| 0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-++-+--+--+-+--+-+ only showing top 20 rows df.na.fill(&#39;example&#39;).show() . ++--++--+-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0|example| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000| 0.0| 0.0|0.324324324|example| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525| 0.0| 0.0| 0.53|example|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-++-+--+--+-+--+-+ only showing top 20 rows df.na.fill(0).show() . ++--++--+-+-+++--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi|rnr| rr| i| fr| reg| it| ++--++--+-+-+++--+--+-+--+-+ 0| Anhui| 147002.0| 0.0|1996| 2093.3| 50661|0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| 0.0|1997|2347.32| 43443|0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| 0.0|1998|2542.96| 27673|0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| 0.0|1999|2712.34| 26131|0.0| 0.0| 0.0|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847|0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| 0.0|2001|3246.71| 33672|0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375|0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720|0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669|0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| 0.0|2005|5350.17| 69000|0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354|0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892|0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| 0.0|1996| 1789.2|155290|0.0| 0.0| 0.0| 634562|North China| 508135| 13| Beijing| 165957.0| 0.0|1997|2077.09|159286|0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| 0.0|1998|2377.18|216800|0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| 0.0|1999|2678.82|197525|0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368|0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| 0.0|2001|3707.96|176818|0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464|0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126|0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-+++--+--+-+--+-+ only showing top 20 rows df.na.fill(&#39;example&#39;,subset=[&#39;fr&#39;]).show() . ++--++--+-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0| null|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| null|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| null|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| null|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| null|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0|example| East China|3422176| 9| Anhui| 898441.0| null|2005|5350.17| 69000| 0.0| 0.0|0.324324324|example| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| null|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| null|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| null|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| null|1999|2678.82|197525| 0.0| 0.0| 0.53|example|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| null|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-++-+--+--+-+--+-+ only showing top 20 rows df.na.fill(0,subset=[&#39;general&#39;]).show() . ++--++--+-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--++--+-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0| 0.0|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0| 0.0|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0| 0.0|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0| 0.0|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0| 0.0|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0|349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0| 0.0|2005|5350.17| 69000| 0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0|279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0|178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0| 0.0|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0| 0.0|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0| 0.0|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0| 0.0|1999|2678.82|197525| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0|188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0| 0.0|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0|280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0|269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--++--+-+-++-+--+--+-+--+-+ only showing top 20 rows # Mean Imputation from pyspark.sql.functions import mean mean_val = df.select(mean(df[&#39;general&#39;])).collect() . mean_val[0][0] . Out[19]: 309127.53846153844 mean_gen = mean_val[0][0] . df.na.fill(mean_gen,[&quot;general&quot;]).show() . ++--+++-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--+++-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0|309127.53846153844|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0|309127.53846153844|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0|309127.53846153844|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0|309127.53846153844|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0|309127.53846153844|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0| 349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0|309127.53846153844|2005|5350.17| 69000| 0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0| 279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0| 178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0|309127.53846153844|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0|309127.53846153844|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0|309127.53846153844|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0|309127.53846153844|1999|2678.82|197525| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0| 188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0|309127.53846153844|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0| 280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0| 269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--+++-+-++-+--+--+-+--+-+ only showing top 20 rows df.na.fill(df.select(mean(df[&#39;general&#39;])).collect()[0][0],[&#39;general&#39;]).show() . ++--+++-+-++-+--+--+-+--+-+ _c0|province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| ++--+++-+-++-+--+--+-+--+-+ 0| Anhui| 147002.0|309127.53846153844|1996| 2093.3| 50661| 0.0| 0.0| 0.0|1128873| East China| 631930| 1| Anhui| 151981.0|309127.53846153844|1997|2347.32| 43443| 0.0| 0.0| 0.0|1356287| East China| 657860| 2| Anhui| 174930.0|309127.53846153844|1998|2542.96| 27673| 0.0| 0.0| 0.0|1518236| East China| 889463| 3| Anhui| 285324.0|309127.53846153844|1999|2712.34| 26131|null| null| null|1646891| East China|1227364| 4| Anhui| 195580.0| 32100.0|2000|2902.09| 31847| 0.0| 0.0| 0.0|1601508| East China|1499110| 5| Anhui| 250898.0|309127.53846153844|2001|3246.71| 33672| 0.0| 0.0| 0.0|1672445| East China|2165189| 6| Anhui| 434149.0| 66529.0|2002|3519.72| 38375| 0.0| 0.0| 0.0|1677840| East China|2404936| 7| Anhui| 619201.0| 52108.0|2003|3923.11| 36720| 0.0| 0.0| 0.0|1896479| East China|2815820| 8| Anhui| 898441.0| 349699.0|2004| 4759.3| 54669| 0.0| 0.0| 0.0| null| East China|3422176| 9| Anhui| 898441.0|309127.53846153844|2005|5350.17| 69000| 0.0| 0.0|0.324324324| null| East China|3874846| 10| Anhui|1457872.0| 279052.0|2006| 6112.5|139354| 0.0| 0.0|0.324324324|3434548| East China|5167300| 11| Anhui|2213991.0| 178705.0|2007|7360.92|299892| 0.0| 0.0|0.324324324|4468640| East China|7040099| 12| Beijing| 165957.0|309127.53846153844|1996| 1789.2|155290|null| null| null| 634562|North China| 508135| 13| Beijing| 165957.0|309127.53846153844|1997|2077.09|159286| 0.0| 0.0| 0.6| 634562|North China| 569283| 14| Beijing| 245198.0|309127.53846153844|1998|2377.18|216800| 0.0| 0.0| 0.53| 938788|North China| 695528| 15| Beijing| 388083.0|309127.53846153844|1999|2678.82|197525| 0.0| 0.0| 0.53| null|North China| 944047| 16| Beijing| 281769.0| 188633.0|2000|3161.66|168368| 0.0| 0.0| 0.53|1667114|North China| 757990| 17| Beijing| 441923.0|309127.53846153844|2001|3707.96|176818| 0.0| 0.0| 0.53|2093925|North China|1194728| 18| Beijing| 558569.0| 280277.0|2002| 4315.0|172464| 0.0| 0.0| 0.53|2511249|North China|1078754| 19| Beijing| 642581.0| 269596.0|2003|5007.21|219126| 0.0|0.794871795| 0.0|2823366|North China|1426600| ++--+++-+-++-+--+--+-+--+-+ only showing top 20 rows",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/18/Pyspark-NAs.html",
            "relUrl": "/2020/08/18/Pyspark-NAs.html",
            "date": " • Aug 18, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "Group By and Aggregation with Pyspark",
            "content": "&quot;Group By and Aggregation with Pyspark&quot; . toc:true- branch: master- badges: true- comments: true | author: David Kearney | categories: [pyspark, jupyter] | description: Group By and Aggregation with Pyspark | title: Group By and Aggregation with Pyspark | . Read CSV and inferSchema . from pyspark.sql import SparkSession from pyspark.sql.functions import countDistinct, avg,stddev # Load data from a CSV file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).option(&quot;inferSchema&quot;, True).option(&quot;header&quot;, True).load(file_location) display(df.take(5)) . _c0provincespecificgeneralyeargdpfdirnrrrifrregit . 0 | Anhui | 147002.0 | null | 1996 | 2093.3 | 50661 | 0.0 | 0.0 | 0.0 | 1128873 | East China | 631930 | . 1 | Anhui | 151981.0 | null | 1997 | 2347.32 | 43443 | 0.0 | 0.0 | 0.0 | 1356287 | East China | 657860 | . 2 | Anhui | 174930.0 | null | 1998 | 2542.96 | 27673 | 0.0 | 0.0 | 0.0 | 1518236 | East China | 889463 | . 3 | Anhui | 285324.0 | null | 1999 | 2712.34 | 26131 | null | null | null | 1646891 | East China | 1227364 | . 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.09 | 31847 | 0.0 | 0.0 | 0.0 | 1601508 | East China | 1499110 | . df.printSchema() . root -- _c0: integer (nullable = true) -- province: string (nullable = true) -- specific: double (nullable = true) -- general: double (nullable = true) -- year: integer (nullable = true) -- gdp: double (nullable = true) -- fdi: integer (nullable = true) -- rnr: double (nullable = true) -- rr: double (nullable = true) -- i: double (nullable = true) -- fr: string (nullable = true) -- reg: string (nullable = true) -- it: integer (nullable = true) Using groupBy for Averages and Counts . df.groupBy(&quot;province&quot;) . Out[8]: &lt;pyspark.sql.group.GroupedData at 0x7f939a0aada0&gt; df.groupBy(&quot;province&quot;).mean().show() . ++--++++++--+--+--++ province|avg(_c0)| avg(specific)| avg(general)|avg(year)| avg(gdp)| avg(fdi)| avg(rnr)| avg(rr)| avg(i)| avg(it)| ++--++++++--+--+--++ Guangdong| 65.5|1123328.0833333333| 312308.0| 2001.5|15358.781666666668| 1194950.25|0.011261261250000001| 0.0| 0.0| 3099014.25| Hunan| 161.5| 824676.9166666666| 480788.3333333333| 2001.5| 4765.891666666666| 132110.25| 0.0| 0.07291666666666667| 0.0| 3215128.5| Shanxi| 281.5| 577540.4166666666| 351680.0| 2001.5| 2817.210833333333|38628.833333333336| 0.0| 0.0| 0.0|1983718.3333333333| Tibet| 317.5|189219.91666666666|165365.33333333334| 2001.5|170.42666666666665| 839.75| 0.03030303033333333| 0.15583333333333335| 0.20278090583333333|1174175.5833333333| Hubei| 149.5| 595463.25| 391326.5| 2001.5| 4772.503333333333| 149713.25| 0.045045045| 0.11386386375000002| 0.06230392158333333| 2904659.75| Tianjin| 305.5| 76884.16666666667| 126636.0| 2001.5|2528.6650000000004|250173.33333333334| 0.0| 0.0| 0.0| 831028.4166666666| Beijing| 17.5| 581440.8333333334| 412825.0| 2001.5| 4673.453333333333|257369.33333333334| 0.0| 0.3613053613636364| 0.29545454545454547|1175965.4166666667| Heilongjiang| 125.5|1037878.1666666666| 315925.3333333333| 2001.5| 4041.241666666667| 82719.33333333333| 0.0| 0.0| 0.03931203927272728|3230451.1666666665| Liaoning| 209.5| 1111002.75|185280.83333333334| 2001.5| 5231.135000000001| 285925.3333333333| 0.11469534044444446| 0.0| null|2628358.4166666665| Henan| 137.5| 955407.4166666666| 673392.5| 2001.5| 7208.966666666667| 94426.0| 0.0| 0.04| 0.08602150533333335|3671970.6666666665| Anhui| 5.5| 643984.1666666666|159698.83333333334| 2001.5|3905.8700000000003| 70953.08333333333| 0.0| 0.0| 0.08845208836363637|2649674.4166666665| Xinjiang| 329.5| 345334.3333333333| 412906.0| 2001.5|1828.8966666666665| 4433.083333333333| 0.0| 0.0| 0.0| 2251012.0| Fujian| 41.5|246144.16666666666|140619.33333333334| 2001.5|4864.0233333333335| 374466.4166666667| 0.1366666666666667|0.049999999999999996| 0.09999999999999999| 1274116.75| Jiangxi| 185.5| 592906.3333333334| 458268.6666666667| 2001.5| 2460.7825| 103735.25| 0.0| 0.1491841490909091|0.042727272727272725| 1760613.25| Jilin| 197.5| 711132.25| 348186.0| 2001.5|2274.8541666666665|41226.583333333336| 0.0| 0.0| 0.0|2136634.9166666665| Chongqing| 29.5| 561854.1111111111| 151201.4| 2001.5| 2477.7125|41127.833333333336| 0.09677419400000001| 0.0| 0.0|1636146.4166666667| Shaanxi| 245.5| 387167.1666666667| 386760.5| 2001.5| 2658.034166666667|50892.583333333336|0.002840909090909091| 0.0| 0.07386363636363637|2474031.4166666665| Sichuan| 293.5| 1194640.5| 707032.8333333334| 2001.5| 5377.79|62197.166666666664| 0.00818181818181818| 0.00818181818181818| 0.2|4016479.5833333335| Yunnan| 341.5| 802151.1666666666| 200426.0| 2001.5| 2604.054166666667|17048.333333333332| 0.0| 0.0| 0.0|3165418.9166666665| Gansu| 53.5| 498930.9166666667| 382092.6666666667| 2001.5|1397.8325000000002| 5295.5| 0.11111111120000002| 0.088974359| 0.13038461533333334| 2045347.0| ++--++++++--+--+--++ only showing top 20 rows df.groupBy(&quot;reg&quot;).mean().show() . +-+++++++--+--+--++ reg| avg(_c0)| avg(specific)| avg(general)|avg(year)| avg(gdp)| avg(fdi)| avg(rnr)| avg(rr)| avg(i)| avg(it)| +-+++++++--+--+--++ Southwest China| 214.3| 648086.8070175438| 327627.0| 2001.5|2410.3988333333336|25405.083333333332| 0.01764440930612245|0.053185448081632655| 0.13679739081632653| 2424971.4| East China|183.78571428571428|517524.90476190473|230217.37142857144| 2001.5| 7126.732976190476|414659.03571428574| 0.08284508739240506| 0.05701117448101268| 0.09036240282278483|1949130.4761904762| Northeast China| 177.5| 953337.7222222222|283130.72222222225| 2001.5| 3849.076944444444| 136623.75| 0.03686635942857143| 0.0| 0.02275960168421053|2665148.1666666665| North China| 179.5|506433.57446808513|334689.14285714284| 2001.5| 4239.038541666667|169600.58333333334| 0.0| 0.15428824051724138| 0.11206896551724138|1733718.7291666667| Northwest China| 216.7|324849.06666666665|293066.73333333334| 2001.5|1340.0261666666668|15111.133333333333|0.022847222240000003|0.033887245249999996|0.048179240615384616| 1703537.75| South Central China| 115.5| 690125.8333333334| 382414.8888888889| 2001.5| 5952.826944444445|281785.59722222225|0.014928879322033899| 0.07324349771186443| 0.06797753142372882| 2626299.875| +-+++++++--+--+--++ # Count df.groupBy(&quot;reg&quot;).count().show() . +-+--+ reg|count| +-+--+ Southwest China| 60| East China| 84| Northeast China| 36| North China| 48| Northwest China| 60| South Central China| 72| +-+--+ # Max df.groupBy(&quot;reg&quot;).max().show() . +-+--+-+++--+--++--+-+--+ reg|max(_c0)|max(specific)|max(general)|max(year)|max(gdp)|max(fdi)| max(rnr)| max(rr)| max(i)| max(it)| +-+--+-+++--+--++--+-+--+ Southwest China| 347| 3937966.0| 1725100.0| 2007|10562.39| 149322| 0.181818182| 0.84| 0.75|10384846| East China| 359| 2213991.0| 1272600.0| 2007|25776.91| 1743140| 1.214285714| 0.53| 0.6| 7040099| Northeast China| 215| 3847672.0| 1046700.0| 2007| 9304.52| 598554| 0.516129032| 0.0|0.21621621600000002| 7968319| North China| 311| 2981235.0| 1023453.0| 2007|13607.32| 527776| 0.0|0.794871795| 0.6| 7537692| Northwest China| 335| 2669238.0| 1197400.0| 2007| 5757.29| 119516|0.5555555560000001| 0.5| 1.05| 6308151| South Central China| 167| 3860764.0| 1737800.0| 2007|31777.01| 1712603| 0.27027027| 0.4375| 0.6176470589999999|10533312| +-+--+-+++--+--++--+-+--+ # Min df.groupBy(&quot;reg&quot;).min().show() . +-+--+-+++--+--+--+-++-+ reg|min(_c0)|min(specific)|min(general)|min(year)|min(gdp)|min(fdi)|min(rnr)|min(rr)|min(i)|min(it)| +-+--+-+++--+--+--+-++-+ Southwest China| 24| 18829.0| 18700.0| 1996| 64.98| 2| 0.0| 0.0| 0.0| 176802| East China| 0| 8964.0| 0.0| 1996| 1169.73| 22724| 0.0| 0.0| 0.0| 489132| Northeast China| 120| 80595.0| 19360.0| 1996| 1137.23| 19059| 0.0| 0.0| 0.0| 625471| North China| 12| 35084.0| 32119.0| 1996| 1121.93| 13802| 0.0| 0.0| 0.0| 303992| Northwest China| 48| 32088.0| 2990.0| 1996| 184.17| 247| 0.0| 0.0| 0.0| 178668| South Central China| 60| 54462.0| 0.0| 1996| 389.68| 29579| 0.0| 0.0| 0.0| 147897| +-+--+-+++--+--+--+-++-+ # Sum df.groupBy(&quot;reg&quot;).sum().show() . +-+--+-++++--+++-++ reg|sum(_c0)|sum(specific)|sum(general)|sum(year)| sum(gdp)|sum(fdi)| sum(rnr)| sum(rr)| sum(i)| sum(it)| +-+--+-++++--+++-++ Southwest China| 12858| 3.6940948E7| 9501183.0| 120090|144623.93000000002| 1524305| 0.864576056| 2.606086956| 6.70307215|145498284| East China| 15438| 4.3472092E7| 8057608.0| 168126| 598645.57|34831359| 6.544761904| 4.503882784000002| 7.138629823000002|163726960| Northeast China| 6390| 3.4320158E7| 5096353.0| 72054| 138566.77| 4918455| 1.032258064| 0.0|0.43243243200000003| 95945334| North China| 8616| 2.3802378E7| 7028472.0| 96072| 203473.85| 8140828| 0.0| 4.474358975| 3.25| 83218499| Northwest China| 13002| 1.9490944E7| 8792002.0| 120090| 80401.57| 906668|1.1423611120000001|1.7621367529999998| 2.505320512|102212265| South Central China| 8316| 4.968906E7| 1.3766936E7| 144108|428603.54000000004|20288563| 0.88080388| 4.321366365000001| 4.010674354000001|189093591| +-+--+-++++--+++-++ # Max it across everything df.agg({&#39;specific&#39;:&#39;max&#39;}).show() . +-+ max(specific)| +-+ 3937966.0| +-+ grouped = df.groupBy(&quot;reg&quot;) grouped.agg({&quot;it&quot;:&#39;max&#39;}).show() . +-+--+ reg| max(it)| +-+--+ Southwest China|10384846| East China| 7040099| Northeast China| 7968319| North China| 7537692| Northwest China| 6308151| South Central China|10533312| +-+--+ df.select(countDistinct(&quot;reg&quot;)).show() . +-+ count(DISTINCT reg)| +-+ 6| +-+ df.select(countDistinct(&quot;reg&quot;).alias(&quot;Distinct Region&quot;)).show() . ++ Distinct Region| ++ 6| ++ df.select(avg(&#39;specific&#39;)).show() . +--+ avg(specific)| +--+ 583470.7303370787| +--+ df.select(stddev(&quot;specific&quot;)).show() . ++ stddev_samp(specific)| ++ 654055.3290782663| ++ Choosing Significant Digits with format_number . from pyspark.sql.functions import format_number . specific_std = df.select(stddev(&quot;specific&quot;).alias(&#39;std&#39;)) specific_std.show() . +--+ std| +--+ 654055.3290782663| +--+ specific_std.select(format_number(&#39;std&#39;,0)).show() . ++ format_number(std, 0)| ++ 654,055| ++ Using orderBy . df.orderBy(&quot;specific&quot;).show() . +++--+-+-+--++--+-+-+-++-+ _c0| province|specific|general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +++--+-+-+--++--+-+-+-++-+ 28|Chongqing| null| null|2000| 1791.0| 24436| null|null|null| null|Southwest China|1022148| 109| Hebei| null| null|1997| 3953.78|110064| null|null|null| null| North China| 826734| 24|Chongqing| null| null|1996| 1315.12| 21878| null|null|null| null|Southwest China| 176802| 25|Chongqing| null| null|1997| 1509.75| 38675| null|null|null| null|Southwest China| 383402| 268| Shanghai| 8964.0| null|2000| 4771.17|316014| 0.0| 0.0|0.44|2224124| East China|1212473| 269| Shanghai| 9834.0| null|2001| 5210.12|429159| 0.0| 0.0|0.44|2947285| East China|1053917| 312| Tibet| 18829.0| null|1996| 64.98| 679|0.181818182| 0.0| 0.0| 27801|Southwest China| 306114| 270| Shanghai| 19985.0| null|2002| 5741.03|427229| 0.0| 0.0|0.44|3380397| East China|1572208| 271| Shanghai| 23547.0| null|2003| 6694.23|546849| 0.0|0.53| 0.0|4461153| East China|2031496| 313| Tibet| 25185.0| null|1997| 77.24| 63|0.181818182| 0.0| 0.0| 33787|Southwest China| 346368| 273| Shanghai| 29943.0| null|2005| 9247.66|685000| 0.0|0.53| 0.0| null| East China|2140461| 272| Shanghai| 29943.0| null|2004| 8072.83|654100| 0.0|0.53| 0.0| null| East China|2703643| 216| Ningxia| 32088.0| null|1996| 202.9| 2826| null|null|null| 90805|Northwest China| 178668| 305| Tianjin| 35084.0| null|2001| 1919.09|213348| 0.0| 0.0| 0.0| 942763| North China| 688810| 228| Qinghai| 37976.0| null|1996| 184.17| 576| null|null|null| 73260|Northwest China| 218361| 302| Tianjin| 39364.0| null|1998| 1374.6|211361| null|null|null| 540178| North China| 361723| 274| Shanghai| 42928.0| null|2006|10572.24|710700| 0.0|0.53| 0.0|8175966| East China|2239987| 217| Ningxia| 44267.0| null|1997| 224.59| 671| null|null|null| 102083|Northwest China| 195295| 303| Tianjin| 45463.0| null|1999| 1500.95|176399| 0.0| 0.0| 0.0| 605662| North China| 422522| 314| Tibet| 48197.0| null|1998| 91.5| 481| 0.0|0.24| 0.0| 3810|Southwest China| 415547| +++--+-+-+--++--+-+-+-++-+ only showing top 20 rows df.orderBy(df[&quot;specific&quot;].desc()).show() . +++++-+--+-+--+--+-+--+-+--+ _c0| province| specific| general|year| gdp| fdi| rnr| rr| i| fr| reg| it| +++++-+--+-+--+--+-+--+-+--+ 299| Sichuan|3937966.0|1725100.0|2007|10562.39| 149322| null| null| null| 8508606| Southwest China|10384846| 143| Henan|3860764.0|1737800.0|2007|15012.46| 306162| 0.0| 0.0| 0.0| 8620804|South Central China|10533312| 131|Heilongjiang|3847672.0|1046700.0|2007| 7104.0| 208508| 0.0| 0.0|0.21621621600000002| 4404689| Northeast China| 7968319| 215| Liaoning|3396397.0| 599600.0|2007| 9304.52| 598554|0.516129032| 0.0| null|10826948| Northeast China| 5502192| 167| Hunan|3156087.0|1329200.0|2007| 9439.6| 327051| 0.0| 0.4375| 0.0| 6065508|South Central China| 8340692| 119| Hebei|2981235.0| 694400.0|2007|13607.32| 241621| 0.0| 0.5| 0.0| 7891198| North China| 7537692| 155| Hubei|2922784.0|1263500.0|2007| 9333.4| 276622| 0.0|0.111111111| 0.0| 5903552|South Central China| 7666512| 251| Shaanxi|2669238.0|1081000.0|2007| 5757.29| 119516| 0.03125| 0.0| 0.8125| 4752398| Northwest China| 6308151| 203| Jilin|2663667.0|1016400.0|2007| 4275.12| 76064| 0.0| 0.0| 0.0| 3206892| Northeast China| 4607955| 347| Yunnan|2482173.0| 564400.0|2007| 4772.52| 39453| 0.0| 0.0| 0.0| 4867146| Southwest China| 6832541| 298| Sichuan|2225220.0|1187958.0|2006| 8690.24| 120819| 0.0| 0.0| 0.55| 4247403| Southwest China| 7646885| 11| Anhui|2213991.0| 178705.0|2007| 7360.92| 299892| 0.0| 0.0| 0.324324324| 4468640| East China| 7040099| 287| Shanxi|2189020.0| 661200.0|2007| 6024.45| 134283| null| null| null| 5978870| North China| 5070166| 263| Shandong|2121243.0| 581800.0|2007|25776.91|1101159| 0.0| 0.0| 0.0|16753980| East China| 6357869| 191| Jiangxi|2045869.0|1272600.0|2007| 4820.53| 280657| 0.0| 0.41025641| 0.0| 3898510| East China| 4229821| 83| Guangxi|2022957.0|1214100.0|2007| 5823.41| 68396|0.205128205| 0.0|0.23076923100000002| 4188265|South Central China| 6185600| 142| Henan|2018158.0|1131615.0|2006|12362.79| 184526| 0.0| 0.0| 0.0| 6212824|South Central China| 7601825| 59| Gansu|2010553.0|1039400.0|2007| 2703.98| 11802| null| 0.0| 1.05| 1909107| Northwest China| 5111059| 95| Guizhou|1956261.0|1239200.0|2007| 2884.11| 12651| 0.0| 0.0| 0.7105263159999999| 2851375| Southwest China| 5639838| 214| Liaoning|1947031.0| 179893.0|2006| 8047.26| 359000|0.516129032| 0.0| null| 6530236| Northeast China| 4605917| +++++-+--+-+--+--+-+--+-+--+ only showing top 20 rows",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/17/Pyspark-Group-By.html",
            "relUrl": "/2020/08/17/Pyspark-Group-By.html",
            "date": " • Aug 17, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "Pyspark Regression with Fiscal Data",
            "content": "&quot;A minimal example of using Pyspark for Linear Regression&quot; . toc:true- branch: master- badges: true- comments: true | author: David Kearney | categories: [pyspark, jupyter] | description: A minimal example of using Pyspark for Linear Regression | title: Pyspark Regression with Fiscal Data | . Bring in needed imports . from pyspark.sql.functions import col from pyspark.sql.types import StringType,BooleanType,DateType,IntegerType from pyspark.sql.functions import * . Load data from CSV . #collapse-hide # Load data from a CSV file_location = &quot;/FileStore/tables/df_panel_fix.csv&quot; df = spark.read.format(&quot;CSV&quot;).option(&quot;inferSchema&quot;, True).option(&quot;header&quot;, True).load(file_location) display(df.take(5)) . . _c0provincespecificgeneralyeargdpfdirnrrrifrregit . 0 | Anhui | 147002.0 | null | 1996 | 2093.3 | 50661 | 0.0 | 0.0 | 0.0 | 1128873 | East China | 631930 | . 1 | Anhui | 151981.0 | null | 1997 | 2347.32 | 43443 | 0.0 | 0.0 | 0.0 | 1356287 | East China | 657860 | . 2 | Anhui | 174930.0 | null | 1998 | 2542.96 | 27673 | 0.0 | 0.0 | 0.0 | 1518236 | East China | 889463 | . 3 | Anhui | 285324.0 | null | 1999 | 2712.34 | 26131 | null | null | null | 1646891 | East China | 1227364 | . 4 | Anhui | 195580.0 | 32100.0 | 2000 | 2902.09 | 31847 | 0.0 | 0.0 | 0.0 | 1601508 | East China | 1499110 | . df.createOrReplaceTempView(&quot;fiscal_stats&quot;) sums = spark.sql(&quot;&quot;&quot; select year, sum(it) as total_yearly_it, sum(fr) as total_yearly_fr from fiscal_stats group by 1 order by year asc &quot;&quot;&quot;) sums.show() . +-+++ year|total_yearly_it|total_yearly_fr| +-+++ 1996| 19825341| 2.9579215E7| 1997| 21391321| 2.9110765E7| 1998| 25511453| 3.8154711E7| 1999| 31922107| 4.2128627E7| 2000| 38721293| 4.8288092E7| 2001| 50754944| 5.8910649E7| 2002| 62375881| 6.2071474E7| 2003| 69316709| 7.2479293E7| 2004| 88626786| null| 2005| 98263665| null| 2006| 119517822| 1.3349148E8| 2007| 153467611| 2.27385701E8| +-+++ Describing the Data . df.describe().toPandas().transpose() . 0 1 2 3 4 . summary count | mean | stddev | min | max | . _c0 360 | 179.5 | 104.06728592598157 | 0 | 359 | . province 360 | None | None | Anhui | Zhejiang | . specific 356 | 583470.7303370787 | 654055.3290782663 | 8964.0 | 3937966.0 | . general 169 | 309127.53846153844 | 355423.5760674793 | 0.0 | 1737800.0 | . year 360 | 2001.5 | 3.4568570586927794 | 1996 | 2007 | . gdp 360 | 4428.653416666667 | 4484.668659976412 | 64.98 | 31777.01 | . fdi 360 | 196139.38333333333 | 303043.97011891654 | 2 | 1743140 | . rnr 294 | 0.0355944252244898 | 0.16061503029299648 | 0.0 | 1.214285714 | . rr 296 | 0.059688621057432424 | 0.15673351824073453 | 0.0 | 0.84 | . i 287 | 0.08376351662369343 | 0.1838933104683607 | 0.0 | 1.05 | . fr 295 | 2522449.0034013605 | 3491329.8613106664 | #REF! | 9898522 | . reg 360 | None | None | East China | Southwest China | . it 360 | 2165819.2583333333 | 1769294.2935487411 | 147897 | 10533312 | . Cast Data Type . df2 = df.withColumn(&quot;gdp&quot;,col(&quot;gdp&quot;).cast(IntegerType())) .withColumn(&quot;specific&quot;,col(&quot;specific&quot;).cast(IntegerType())) .withColumn(&quot;general&quot;,col(&quot;general&quot;).cast(IntegerType())) .withColumn(&quot;year&quot;,col(&quot;year&quot;).cast(IntegerType())) .withColumn(&quot;fdi&quot;,col(&quot;fdi&quot;).cast(IntegerType())) .withColumn(&quot;rnr&quot;,col(&quot;rnr&quot;).cast(IntegerType())) .withColumn(&quot;rr&quot;,col(&quot;rr&quot;).cast(IntegerType())) .withColumn(&quot;i&quot;,col(&quot;i&quot;).cast(IntegerType())) .withColumn(&quot;fr&quot;,col(&quot;fr&quot;).cast(IntegerType())) . printSchema . df2.printSchema() . root -- _c0: integer (nullable = true) -- province: string (nullable = true) -- specific: integer (nullable = true) -- general: integer (nullable = true) -- year: integer (nullable = true) -- gdp: integer (nullable = true) -- fdi: integer (nullable = true) -- rnr: integer (nullable = true) -- rr: integer (nullable = true) -- i: integer (nullable = true) -- fr: integer (nullable = true) -- reg: string (nullable = true) -- it: integer (nullable = true) from pyspark.ml.feature import VectorAssembler from pyspark.ml.regression import LinearRegression assembler = VectorAssembler(inputCols=[&#39;gdp&#39;, &#39;fdi&#39;], outputCol=&quot;features&quot;) train_df = assembler.transform(df2) . train_df.select(&quot;specific&quot;, &quot;year&quot;).show() . +--+-+ specific|year| +--+-+ 147002|1996| 151981|1997| 174930|1998| 285324|1999| 195580|2000| 250898|2001| 434149|2002| 619201|2003| 898441|2004| 898441|2005| 1457872|2006| 2213991|2007| 165957|1996| 165957|1997| 245198|1998| 388083|1999| 281769|2000| 441923|2001| 558569|2002| 642581|2003| +--+-+ only showing top 20 rows Linear Regression in Pyspark . lr = LinearRegression(featuresCol = &#39;features&#39;, labelCol=&#39;it&#39;) lr_model = lr.fit(train_df) trainingSummary = lr_model.summary print(&quot;Coefficients: &quot; + str(lr_model.coefficients)) print(&quot;RMSE: %f&quot; % trainingSummary.rootMeanSquaredError) print(&quot;R2: %f&quot; % trainingSummary.r2) . Coefficients: [495.05888709337756,-4.968141828763066] RMSE: 1234228.673087 R2: 0.512023 lr_predictions = lr_model.transform(train_df) lr_predictions.select(&quot;prediction&quot;,&quot;it&quot;,&quot;features&quot;).show(5) from pyspark.ml.evaluation import RegressionEvaluator lr_evaluator = RegressionEvaluator(predictionCol=&quot;prediction&quot;, labelCol=&quot;it&quot;,metricName=&quot;r2&quot;) . ++-+-+ prediction| it| features| ++-+-+ 1732528.7382477913| 631930|[2093.0,50661.0]| 1894133.7432895212| 657860|[2347.0,43443.0]| 2069017.8229123235| 889463|[2542.0,27673.0]| 2160838.7084181504|1227364|[2712.0,26131.0]| 2226501.9982726825|1499110|[2902.0,31847.0]| ++-+-+ only showing top 5 rows print(&quot;R Squared (R2) on test data = %g&quot; % lr_evaluator.evaluate(lr_predictions)) . R Squared (R2) on test data = 0.512023 print(&quot;numIterations: %d&quot; % trainingSummary.totalIterations) print(&quot;objectiveHistory: %s&quot; % str(trainingSummary.objectiveHistory)) trainingSummary.residuals.show() . numIterations: 1 objectiveHistory: [0.0] +-+ residuals| +-+ -1100598.7382477913| -1236273.7432895212| -1179554.8229123235| -933474.7084181504| -727391.9982726825| -222546.39659531135| -94585.30175113119| 108072.63313654158| 389732.58121094666| 621021.2194867637| 1885768.997742407| 3938310.059555837| -554084.125169754| -615660.3899049093| -352195.3468934437| -348450.00565795833| -918476.5594253046| -710059.9133252408| -1148661.0062004486| -911572.322055324| +-+ only showing top 20 rows predictions = lr_model.transform(test_df) predictions.select(&quot;prediction&quot;,&quot;it&quot;,&quot;features&quot;).show() . ++-++ prediction| it| features| ++-++ 976371.9212205639| 306114| [64.0,679.0]| 990722.2032541803| 415547| [91.0,481.0]| 1016348.0830204486| 983251| [139.0,106.0]| 1036290.7062801318| 218361| [184.0,576.0]| 1034023.4471330958| 178668| [202.0,2826.0]| 1060130.0768520113| 274994| [245.0,1856.0]| 1023513.0851009073| 546541|[263.0,11020.0]| 1053250.6267921| 361358| [264.0,5134.0]| 1123768.8091592425| 866691| [377.0,2200.0]| 1128604.8330225947| 948521| [390.0,2522.0]| 810587.2575938476| 177748|[442.0,71715.0]| 1159703.254297337| 736165| [445.0,1743.0]| 1066975.770986663|1260633|[466.0,22500.0]| 1288507.6625716756|1423771| [725.0,3718.0]| 1320055.238474972| 573905| [793.0,4144.0]| 1188611.0570700848|2347862|[797.0,31000.0]| 1321857.482976733| 582711| [805.0,4977.0]| 1033849.5995896922| 746784|[819.0,64343.0]| 1445051.792853667|1216605|[1029.0,2501.0]| 1437887.1056682135|1258100|[1052.0,6235.0]| ++-++ only showing top 20 rows from pyspark.ml.regression import DecisionTreeRegressor dt = DecisionTreeRegressor(featuresCol =&#39;features&#39;, labelCol = &#39;it&#39;) dt_model = dt.fit(train_df) dt_predictions = dt_model.transform(train_df) dt_evaluator = RegressionEvaluator( labelCol=&quot;it&quot;, predictionCol=&quot;prediction&quot;, metricName=&quot;rmse&quot;) rmse = dt_evaluator.evaluate(dt_predictions) print(&quot;Root Mean Squared Error (RMSE) on test data = %g&quot; % rmse) . Root Mean Squared Error (RMSE) on test data = 1.01114e+06 from pyspark.ml.regression import GBTRegressor gbt = GBTRegressor(featuresCol = &#39;features&#39;, labelCol = &#39;it&#39;, maxIter=10) gbt_model = gbt.fit(train_df) gbt_predictions = gbt_model.transform(train_df) gbt_predictions.select(&#39;prediction&#39;, &#39;it&#39;, &#39;features&#39;).show(5) gbt_evaluator = RegressionEvaluator( labelCol=&quot;it&quot;, predictionCol=&quot;prediction&quot;, metricName=&quot;rmse&quot;) rmse = gbt_evaluator.evaluate(gbt_predictions) print(&quot;Root Mean Squared Error (RMSE) on test data = %g&quot; % rmse) . ++-+-+ prediction| it| features| ++-+-+ 1388898.308543053| 631930|[2093.0,50661.0]| 1388898.308543053| 657860|[2347.0,43443.0]| 1649083.6277172007| 889463|[2542.0,27673.0]| 1649083.6277172007|1227364|[2712.0,26131.0]| 1649083.6277172007|1499110|[2902.0,31847.0]| ++-+-+ only showing top 5 rows Root Mean Squared Error (RMSE) on test data = 778728",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/08/15/Pyspark-Fiscal-Data-Regression.html",
            "relUrl": "/2020/08/15/Pyspark-Fiscal-Data-Regression.html",
            "date": " • Aug 15, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "Data Science, Big Data and Healthcare Research",
            "content": "Data Science, Big Data and Healthcare Research . This post will consider the use of hive, spark, and for machine learning pipelines and workflows. . # Prints &#39;2&#39; print(1+1) .",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/markdown/2020/06/08/1st-markdown-post.html",
            "relUrl": "/markdown/2020/06/08/1st-markdown-post.html",
            "date": " • Jun 8, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "A timer for ML functions",
            "content": "&quot;A timer for ML functions&quot; . toc:true- branch: master- badges: true- comments: true | author: David Kearney | categories: [timer, jupyter] | description: A timer for ML functions | title: A timer for ML functions | . #collapse-hide from functools import wraps import time def timer(func): &quot;&quot;&quot;[This decorator is a timer for functions] Args: func ([function]): [This decorator takes a function as argument] Returns: [string]: [states the duration of time between the function begining and ending] &quot;&quot;&quot; @wraps(func) def wrapper(*args, **kwargs): print(f&quot;{func.__name__!r} begins&quot;) start_time = time.time() result = func(*args, **kwargs) print(f&quot;{func.__name__!r} ends in {time.time()-start_time} secs&quot;) return result return wrapper . . @timer def model_metrics(*args, **kwargs): &quot;&quot;&quot;[This is a function to print model metrics of interest] &quot;&quot;&quot; print(&quot;Model ID Number:&quot;, args) print(&quot;Metric of Interest:&quot;, kwargs) model_metrics(1, 2, 10, key=&quot;word&quot;, key2=&quot;word2&quot;, numtrees=&quot;200&quot;) . from collections import Counter import math, random # # data splitting # def split_data(data, prob): &quot;&quot;&quot;split data into fractions [prob, 1 - prob]&quot;&quot;&quot; results = [], [] for row in data: results[0 if random.random() &lt; prob else 1].append(row) return results def train_test_split(x, y, test_pct): data = list(zip(x, y)) # pair corresponding values train, test = split_data(data, 1 - test_pct) # split the dataset of pairs x_train, y_train = list(zip(*train)) # magical un-zip trick x_test, y_test = list(zip(*test)) return x_train, x_test, y_train, y_test # # correctness # def accuracy(tp, fp, fn, tn): correct = tp + tn total = tp + fp + fn + tn return correct / total def precision(tp, fp, fn, tn): return tp / (tp + fp) def recall(tp, fp, fn, tn): return tp / (tp + fn) def f1_score(tp, fp, fn, tn): p = precision(tp, fp, fn, tn) r = recall(tp, fp, fn, tn) return 2 * p * r / (p + r) if __name__ == &quot;__main__&quot;: print(&quot;accuracy(70, 4930, 13930, 981070)&quot;, accuracy(70, 4930, 13930, 981070)) print(&quot;precision(70, 4930, 13930, 981070)&quot;, precision(70, 4930, 13930, 981070)) print(&quot;recall(70, 4930, 13930, 981070)&quot;, recall(70, 4930, 13930, 981070)) print(&quot;f1_score(70, 4930, 13930, 981070)&quot;, f1_score(70, 4930, 13930, 981070)) . favorite_number = 7 def add(a, b): return a + b def sub(a, b): return a - b def multiply(a, b): return a * b def divide(a, b): return a / b def count_vowels(word): count = 0 for letter in word.lower(): count += letter in &#39;aeiou&#39; return count . # import example_module as sm # print(sm.favorite_number) # # add two numbers together # print(sm.add(3, 8)) # # count the number of vowels in a string # print(sm.count_vowels(&#39;Testing&#39;)) . import pandas as pd from alive_progress import alive_bar, showtime, show_bars, show_spinners, config_handler config_handler.set_global(theme=&#39;ascii&#39;, spinner=&#39;notes&#39;, bar=&#39;solid&#39;) with alive_bar(3) as bar: df = pd.read_csv(&#39;https://gist.githubusercontent.com/davidrkearney/bb461ba351da484336a19bd00a2612e2/raw/18dd90b57fec46a247248d161ffd8085de2a00db/china_province_economicdata_1996_2007.csv&#39;) bar(&#39;file read, printing file&#39;) print(df.head) bar(&#39;data printed ok, printing methods of data&#39;) print(dir(df)) bar(&#39;process complete&#39;) . from functools import wraps import time def timer(func): &quot;&quot;&quot;[This decorator is a timer for functions] Args: func ([function]): [This decorator takes a function as argument] Returns: [string]: [states the duration of time between the function begining and ending] &quot;&quot;&quot; @wraps(func) def wrapper(*args, **kwargs): print(f&quot;{func.__name__!r} begins&quot;) start_time = time.time() result = func(*args, **kwargs) print(f&quot;{func.__name__!r} ends in {time.time()-start_time} secs&quot;) return result return wrapper @timer def model_metrics(*args, **kwargs): &quot;&quot;&quot;[This is a function to print model metrics of interest] &quot;&quot;&quot; print(&quot;Model ID Number:&quot;, args) print(&quot;Metric of Interest:&quot;, kwargs) model_metrics(1, 2, 10, key=&quot;word&quot;, key2=&quot;word2&quot;, numtrees=&quot;200&quot;) .",
            "url": "https://davidrkearney.github.io/Kearney_Data_Science/2020/06/07/kwargs-decorators.html",
            "relUrl": "/2020/06/07/kwargs-decorators.html",
            "date": " • Jun 7, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Senior Data Scientist at CVS Health. | Ph.D. from Duke University | .",
          "url": "https://davidrkearney.github.io/Kearney_Data_Science/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://davidrkearney.github.io/Kearney_Data_Science/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}